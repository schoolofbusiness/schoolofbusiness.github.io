import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t}from"./app-56f1ebe4.js";const e="/assets/images/python/12/1.png",o="/assets/images/python/12/2.png",p="/assets/images/python/12/3.png",l="/assets/images/python/12/4.jpg",c={},i=t('<h1 id="_12-tananyag" tabindex="-1"><a class="header-anchor" href="#_12-tananyag" aria-hidden="true">#</a> 12. tananyag</h1><div class="hint-container tip"><p class="hint-container-title">üìö EBBEN A FEJEZETBEN</p><ul><li>Munka CSV f√°jlokkal</li><li>CSV import√°l√°sa objektumokba √©s sz√≥t√°rakba</li></ul></div><h2 id="csv-fajlok-megismerese" tabindex="-1"><a class="header-anchor" href="#csv-fajlok-megismerese" aria-hidden="true">#</a> CSV f√°jlok megismer√©se</h2><p>A CSV (vessz≈ëvel elv√°lasztott √©rt√©kek) egy sz√©les k√∂rben haszn√°lt form√°tum a t√°bl√°zatos adatok t√°rol√°s√°ra √©s sz√°ll√≠t√°s√°ra. A t√°bl√°zatos azt jelenti, hogy az adatok √°ltal√°ban sorokb√≥l √©s oszlopokb√≥l √°ll√≥ t√°bl√°zatos form√°tumban jelen√≠thet≈ëk meg. Egy t√°bl√°zatkezel≈ë alkalmaz√°sban, p√©ld√°ul a Microsoft Excelben, az Apple Numbersben vagy a Google Sheetsben a t√°bl√°zatos form√°tum nyilv√°nval√≥, ahogy az a lenti √°br√°n l√°that√≥.</p><figure><img src="'+e+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>üñºÔ∏è <em>CSV f√°jl Microsoft Excelben.</em></p><p>üíæ <strong>A</strong> <a href="/assets/images/python/12/sample.csv">sample.csv</a> <strong>let√∂lt√©se</strong>. üëàüèª</p><p>Egy speci√°lis program seg√≠ts√©ge n√©lk√ºl, amely a f√°jlban l√©v≈ë adatokat t√°bl√°zatos form√°ban jelen√≠ti meg, minden sor csak egy sor a f√°jlban. √âs minden egyes egyedi √©rt√©ket vessz≈ëvel v√°lasztunk el. Ha p√©ld√°ul a fenti √°br√°n l√°that√≥ f√°jlt megnyitjuk egy egyszer≈± sz√∂vegszerkeszt≈ë programban, p√©ld√°ul a <em>Notepad</em> vagy a <em>TextEdit</em> programban, akkor a lenti √°br√°n l√°that√≥ m√≥don l√°thatjuk, hogy val√≥j√°ban mi van a f√°jlban t√°rolva.</p><figure><img src="'+o+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>üñºÔ∏è <em>CSV f√°jl egy sz√∂vegszerkeszt≈ë programban.</em></p><p>A sz√∂vegszerkeszt≈ëben az els≈ë sor, amelyet gyakran fejl√©cnek neveznek, tartalmazza a t√°bl√°zat els≈ë sor√°ban megjelen≈ë oszlopfejl√©ceket vagy mez≈ëneveket. Ha megn√©zz√ºk a neveket a m√°sodik p√©ld√°ban, a nyers CSV-f√°jlban, l√°thatjuk, hogy id√©z≈ëjelek k√∂z√© vannak z√°rva, √≠gy:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&quot;Angst, Annie&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Az id√©z≈ëjelek azt jelzik, hogy a k√∂z√∂tt√ºk l√©v≈ë tartalom mind egy dolog. M√°s sz√≥val, a vezet√©k- √©s keresztn√©v k√∂z√∂tti vessz≈ë a n√©v r√©sze, nem egy √∫j oszlop kezdete. Teh√°t az els≈ë k√©t oszlop ebben az els≈ë sorban a k√∂vetkez≈ë</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&quot;Angst, Annie&quot;, 1982
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>√©s nem</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Angst, Annie
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ugyanez igaz az √∂sszes t√∂bbi sorra is: Az id√©z≈ëjelekbe z√°rt n√©v (<em>bele√©rtve a vessz≈ëket is</em>) csak egy n√©v, nem pedig k√©t k√ºl√∂n adatoszlop.</p><p>Ha egy karakterl√°nc aposztr√≥fot tartalmaz, ami ugyanaz a karakter, mint egy egyszer≈± id√©z≈ëjel, akkor a karakterl√°nc k√∂r√ºl dupla id√©z≈ëjeleket kell haszn√°lnunk. Ellenkez≈ë esetben, ha ezt tessz√ºk:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&#39;O&#39;Henry, Harry&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>a karakterl√°nc els≈ë r√©sze <strong>&#39;O&#39;</strong>, √©s a Python nem tudja, mit kezdjen a m√°sodik id√©z≈ëjel ut√°ni sz√∂veggel. A kett≈ës id√©z≈ëjelek haszn√°lata cs√∂kkenti a f√©lre√©rt√©seket, mivel a n√©vben nincsen kett≈ës id√©z≈ëjel:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&quot;O&#39;Henry, Harry&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Az eddigi √°br√°kon l√°tott CSV-f√°jlok l√©trehoz√°sakor felmer√ºl≈ë egy√©b szempontokat is szeml√©lteti. P√©ld√°ul a <strong>B√≥na√±as, Barry</strong> n√©v n√©h√°ny nem ASCII karaktert tartalmaz. Az <strong>utols√≥ el≈ëtti sor</strong> csak egy csom√≥ vessz≈ët tartalmaz. (Egy CSV-f√°jlban, ha egy cell√°b√≥l hi√°nyoznak az adatok, akkor a cell√°t lez√°r√≥ vessz≈ët a bal oldal√°ra kell tenni, ahol nincs semmi.) A Balance oszlopban doll√°rjelek √©s vessz≈ëk vannak a sz√°mok k√∂z√∂tt, amelyek nem m≈±k√∂dnek a Python <code>float</code> adatt√≠pus√°val. A k√∂vetkez≈ëkben besz√©l√ºnk arr√≥l, hogyan kezelj√ºk mindezeket a probl√©m√°kat.</p><p>B√°r a CSV f√°jlokkal dolgozhatunk az eddig tanultak alapj√°n is, a feladat sokkal gyorsabb √©s egyszer≈±bb lesz, ha a <code>csv</code> <strong>modult</strong> haszn√°ljuk. A haszn√°lat√°hoz csak tegy√ºk ezt a programunk elej√©re:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ne feledj√ºk, ez a k√≥dsor nem egy CSV f√°jlt fog bet√∂lteni. Az el≈ëre meg√≠rt k√≥dokat t√∂lti be, amely megk√∂nny√≠ti a CSV-f√°jlokkal val√≥ munk√°t a saj√°t Python-k√≥dunkban.</p><h2 id="csv-fajl-megnyitasa" tabindex="-1"><a class="header-anchor" href="#csv-fajl-megnyitasa" aria-hidden="true">#</a> CSV f√°jl megnyit√°sa</h2><p>A CSV-f√°jl megnyit√°sa nem k√ºl√∂nb√∂zik b√°rmely m√°s f√°jl megnyit√°s√°t√≥l. Csak ne feledj√ºk, hogy ha a f√°jl speci√°lis karaktereket tartalmaz, akkor a hiba√ºzenet elker√ºl√©se √©rdek√©ben be kell √≠rnunk az <code>encoding=&#39;utf-8&#39;</code> k√≥dol√°st. Opcion√°lisan, az adatok import√°l√°sakor val√≥sz√≠n≈±leg nem akarjuk beolvasni az √∫jsor karaktert minden sor v√©g√©n, ez√©rt az <code>open()</code> utas√≠t√°shoz hozz√°adhatjuk a <code>new-line=&#39;&#39;</code>-t. A k√∂vetkez≈ëk√©ppen k√≥dolhatod ezt:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;sample.csv&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A CSV-f√°jlok k√∂rbej√°r√°s√°hoz haszn√°lhatjuk a be√©p√≠tett <code>reader()</code> f√ºggv√©nyt, amely v√©grehajt√°skor egy sort olvas be. A szintaxis ism√©t egyszer≈±:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Helyettes√≠ts√ºk az <code>f</code>-et azzal a n√©vvel, amelyet a <code>with open</code> utas√≠t√°s v√©g√©n haszn√°ltunk (<em>a legv√©g√©n l√©v≈ë kett≈ëspont n√©lk√ºl</em>) - amennyiben nem <code>f</code>-et √≠rt√°l.</p><p>Opcion√°lisan a sorokat menet k√∂zben is megsz√°molhatjuk. Csak tegy√ºnk mindent az <code>=</code> jobb oldal√°ra az <code>enumerate()</code>-ben, ahogy az al√°bbiakban l√°that√≥ (<em>ahol a k√≥d f√∂l√© egy megjegyz√©st is tett√ºnk</em>):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a CVS row counter and row reader.</span>
reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ezut√°n be√°ll√≠thatja a <code>for:</code> ciklust √∫gy, hogy egyszerre csak egy sort olvasson be. Mivel egy enumerate()-et helyezt√ºnk a ciklusra, k√©t v√°ltoz√≥nevet haszn√°lhatunk a <code>for:</code> ciklusban. Az els≈ë v√°ltoz√≥ (amelyet <code>i</code>-nek <strong>nevez√ºnk</strong>) a <strong>sz√°ml√°l√≥t</strong> tartja sz√°mon (amely 0-r√≥l indul, √©s a ciklus minden egyes lefut√°sakor 1-gyel n√∂vekszik). A m√°sodik v√°ltoz√≥, a <code>row</code>, a CSV f√°jl teljes <strong>adatsor√°t tartalmazza</strong>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Loop through one row at a time, i is counter, row is entire row.</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A cikluson bel√ºl a <code>print()</code> f√ºggv√©nyt haszn√°lhatjuk az <code>i</code> √©s a <code>row</code> √©rt√©k√©nek ki√≠r√°s√°ra a ciklus minden egyes √°tfut√°sakor, p√©ld√°ul √≠gy:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv

<span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Create a CVS row counter and row reader.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through one row at a time, i is counter, row is entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> row<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√≥d kimenete a kor√°bban ismertetett <strong>sample.csv</strong> f√°jlt bemenetk√©nt haszn√°lva a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0 [&#39;\\ufeffFull Name&#39;, &#39;Birth Year&#39;, &#39;Date Joined&#39;, &#39;Is Active&#39;, &#39;Balance&#39;]
1 [&#39;Angst, Annie&#39;, &#39;1982&#39;, &#39;1/11/2011&#39;, &#39;TRUE&#39;, &#39;$300.00&#39;]
2 [&#39;B√≥na√±as, Barry&#39;, &#39;1973&#39;, &#39;2/11/2012&#39;, &#39;FALSE&#39;, &#39;-$123.45&#39;]
3 [&#39;Schadenfreude, Sandy&#39;, &#39;2004&#39;, &#39;3/3/2003&#39;, &#39;TRUE&#39;, &#39;$0.00&#39;]
4 [&#39;Weltschmerz, Wanda&#39;, &#39;1995&#39;, &#39;4/24/1994&#39;, &#39;FALSE&#39;, &#39;$999,999.99&#39;]
5 [&#39;Malaise, Mindy&#39;, &#39;2006&#39;, &#39;5/5/2005&#39;, &#39;TRUE&#39;, &#39;$454.01&#39;]
6 [&#39;OPossum, Ollie&#39;, &#39;1987&#39;, &#39;7/27/1997&#39;, &#39;FALSE&#39;, &#39;-$1,000.00&#39;]
7 [&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39; &#39;]
8 [&#39;Pusillanimity, Pamela&#39;, &#39;1979&#39;, &#39;8/8/2008&#39;, &#39;TRUE&#39;, &#39;$12,345.67&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Figyelj√ºk meg, hogy az oszlopnevek sora a 0. sor. A Full Name el≈ëtti furcsa <code>\\ufeff</code> ebben a sorban a <em>byte order mark</em> (<strong>BOM</strong>), amit az Excel egyszer≈±en csak besz√∫r. √Åltal√°ban nem √©rdekel, hogy mi van az els≈ë sorban, mert az adatok csak a m√°sodik sorban kezd≈ëdnek. Teh√°t ne is gondoljon a BOM-ra nincs √©rt√©ke a mi eset√ºnkben, √©s nem okoz semmilyen probl√©m√°t.</p><p>Amint l√°thatjuk, minden sor egy √∂t, vessz≈ëvel elv√°lasztott t√©telb≈ël √°ll√≥ lista. A k√≥dunkban az egyes oszlopokra a poz√≠ci√≥jukkal hivatkozhatunk. P√©ld√°ul a <code>row[0]</code> az els≈ë oszlop a sorban (<strong>a szem√©ly neve</strong>). Ezut√°n a <code>row[1]</code> a sz√ºlet√©si √©v, a <code>row[2]</code> a csatlakoz√°si d√°tum, a <code>row[3]</code> az, hogy a szem√©ly akt√≠v-e, √©s a <code>row[4]</code> az egyenleg.</p><p><strong>A CSV-f√°jlban minden adat karakterl√°ncokb√≥l √°ll</strong> - m√©g akkor is, ha nem √∫gy n√©znek ki, mint a karakterl√°ncok. De minden √©s minden, ami egy CSV-f√°jlb√≥l sz√°rmazik, egy karakterl√°nc, mert a CSV-f√°jl egyfajta sz√∂vegf√°jl, √©s a sz√∂vegf√°jl csak karakterl√°ncokat (<strong>sz√∂veget</strong>) tartalmaz - <strong>integereket, d√°tumokat, booleanokat vagy float √©rt√©keket nem.</strong></p><p>Az alkalmaz√°sodban val√≥sz√≠n≈±leg Python adatt√≠pusokk√° akarod majd konvert√°lni a bej√∂v≈ë adatokat, hogy hat√©konyabban tudj vel√ºk dolgozni, vagy ak√°r √°tvinni ≈ëket egy adatb√°zisba. A k√∂vetkez≈ë szakaszokban megn√©zz√ºk, hogyan v√©gezhetj√ºk el a konverzi√≥t az egyes adatt√≠pusok eset√©ben.</p><h3 id="stringre-karakterlanca-valo-alakitas" tabindex="-1"><a class="header-anchor" href="#stringre-karakterlanca-valo-alakitas" aria-hidden="true">#</a> Stringre (karakterl√°nc√°) val√≥ alak√≠t√°s</h3><p>Gyakorlatilag semmit sem kell a CSV-f√°jlb√≥l karakterl√°ncc√° konvert√°lnia. De el≈ëfordulhat, hogy a f√°jlt egy kicsit fel kell darabolni, vagy az √ºres karakterl√°ncokat valamilyen m√≥don kezelni kell. El≈ësz√∂r is, mint eml√≠tett√ºk, itt csak az adatokkal foglalkozunk, nem azzal az els≈ë sorral. Teh√°t a cikluson bel√ºl kezdhetj√ºk egy <code>if</code>-fel, amely nem csin√°l semmit, ha az aktu√°lis sor a 0. sor. A <code>print(i, row)</code> helyettes√≠thet≈ë √≠gy:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Row 0 is just column headings, ignore it. </span>
<span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    full_name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
    last_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    first_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ez a k√≥d azt mondja: <em>&quot;Am√≠g nem az els≈ë sort n√©zz√ºk, hozzon l√©tre egy <code>full_name</code> nev≈± v√°ltoz√≥t, √©s t√°rolja benne, ami az els≈ë oszlopban van, a vessz≈ën√©l k√©t k√ºl√∂n √©rt√©kre osztva.&quot;</em>. Miut√°n ez a sor v√©grehajt√≥dik, a <code>full_name[0]</code> tartalmazza a szem√©ly vezet√©knev√©t, amelyet a <code>last_name</code> nev≈± v√°ltoz√≥ba tesz√ºnk, a <code>full_name[1]</code> pedig a szem√©ly keresztnev√©t, amelyet a <code>first_name</code> nev≈± v√°ltoz√≥ba tesz√ºnk. De ha √≠gy futtatjuk a k√≥dot, akkor hib√°ra fut, mert a <strong>7. sor</strong>-ban nincs n√©v, √©s a Python nem tud egy √ºres karakterl√°ncot vessz≈ën√©l sz√©tv√°lasztani - <strong>mert az √ºres karakterl√°nc nem tartalmaz vessz≈ët</strong>.</p><p>Ezt megker√ºlhetj√ºk azzal, hogy a Pythonnak megmondjuk, hogy pr√≥b√°lja meg a nevet a vessz≈ën√©l sz√©tv√°lasztani, ha ez lehets√©ges. De ha a pr√≥b√°lkoz√°s k√∂zben hib√°ra futna, akkor egyszer≈±en t√°roljon egy √ºres karakterl√°ncot a <code>full_name</code>, <code>last_name</code> √©s <code>first_name</code> v√°ltoz√≥kban. Itt van ez a k√≥d n√©h√°ny extra vessz≈ëvel, hogy megmagyar√°zzuk, mi t√∂rt√©nik. Ahelyett, hogy <code>i</code>-t √©s a teljes sort ki√≠rn√°, a k√≥d a keresztnevet √©s a vezet√©knevet √≠rja ki <strong>√©s semmit arra a sorra, amelynek az inform√°ci√≥ja hi√°nyzik</strong>. A kimenet a k√≥d alatt jelenik meg:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv

<span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># # Create a CVS row counter and row reader.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through one row at a time, i is counter, row is entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
        <span class="token comment"># Row 0 is just column headings, ignore it.</span>
        <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token comment"># Whole name split into two at comma.</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                full_name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
                <span class="token comment"># Last name, strip extra spaces.</span>
                last_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment"># First name, strip extra spaces.</span>
                first_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
                full_name <span class="token operator">=</span> last_name <span class="token operator">=</span> first_name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kimenet:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Annie Angst
Barry B√≥na√±as
Sandy Schadenfreude
Wanda Weltschmerz
Mindy Malaise
Ollie OPossum
 
Pamela Pusillanimity
Done!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="integerre-egesz-szamra-valo-atalakitas" tabindex="-1"><a class="header-anchor" href="#integerre-egesz-szamra-valo-atalakitas" aria-hidden="true">#</a> Integerre (eg√©sz sz√°mra) val√≥ √°talak√≠t√°s</h3><p>Minden sor m√°sodik oszlopa, a <code>row[1]</code> a sz√ºlet√©si √©v. Am√≠g a karakterl√°nc olyasmit tartalmaz, ami sz√°mm√° konvert√°lhat√≥, addig az egyszer≈± be√©p√≠tett <code>int()</code> f√ºggv√©nnyel eg√©sz sz√°mm√° konvert√°lhatjuk. A <strong>7. sorban van egy probl√©m√°nk</strong>, amely √ºres. A Python nem fogja automatikusan 0-ra konvert√°lni, egy kicsit seg√≠ten√ºnk kell neki a k√∂vetkez≈ëk szerint:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Birth year integer, zero for empty string. </span>
birth_year <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ez a k√≥dsor √≠gy sz√≥l: <strong>&quot;Hozz l√©tre egy <code>birth_year</code> nev≈± v√°ltoz√≥t, √©s tedd bele a m√°sodik oszlop √©rt√©k√©t, ha tudod, vagy ha nincs semmi, amit eg√©sz sz√°mm√° lehetne konvert√°lni, akkor csak egy null√°t √≠rj bele&quot;</strong>.</p><h3 id="datere-datumra-valo-atalakitas" tabindex="-1"><a class="header-anchor" href="#datere-datumra-valo-atalakitas" aria-hidden="true">#</a> Datere (d√°tumra) val√≥ √°talak√≠t√°s</h3><p>A CSV-f√°jlunk harmadik oszlopa, a <code>row[2]</code>, a d√°tumot tartalmazza, √©s √∫gy t≈±nik, hogy minden sorban van egy √©sszer≈± d√°tum <em>(kiv√©ve azt a sort, amelynek az adatai hi√°nyoznak)</em>. Ahhoz, hogy a sz√∂veges d√°tumot Python-d√°tumm√° konvert√°ljuk, import√°lnunk kell a <code>datetime</code> modult az <code>import datetime as dt</code> hozz√°ad√°s√°val a program tetej√©n. Ezut√°n az egyszer≈± konverzi√≥ a k√∂vetkez≈ë:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>date_joined <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Sok minden t√∂rt√©nik itt. El≈ësz√∂r is l√©trehozunk egy v√°ltoz√≥t, amelynek a neve <code>date_joined</code>. A <code>strptime</code> k√≥d azt jelenti, hogy &quot;<strong>string parse for date time</strong>&quot;. A <code>row[2]</code> k√≥d a harmadik oszlopot jelenti (<strong>mivel az els≈ë oszlop mindig a 0. oszlop</strong>). A &quot;<strong>%m/%d/%Y</strong>&quot; azt mondja az <code>strptime</code>-nak, hogy a d√°tum karakterl√°nc tartalmazza a h√≥napot, egy k√∂t≈ëjelet, a h√≥nap napj√°t, egy k√∂t≈ëjelet, majd a n√©gyjegy≈± √©vet (<strong>%Y</strong>). A <code>.date()</code> a v√©g√©n azt jelenti, hogy &quot;<em>csak a d√°tum, itt nincs id≈ë, amit elemezni kell</em>&quot;.</p><p>Egy kis probl√©ma. Amikor a program eljut ahhoz a sorhoz, amelynek a d√°tuma hi√°nyzik, akkor hib√°ra fog futni. Ez√©rt ism√©t egy <code>try</code> blokkot haszn√°lunk a d√°tum √°talak√≠t√°s√°ra, ha nem tal√°l d√°tumot, akkor a <code>None</code> √©rt√©ket adjon, ami a Pythonban az √ºres objektumot jelenti.</p><p>Pythonban a <code>datetime</code> egy oszt√°ly, √≠gy minden d√°tum √©s id≈ë, amit l√©trehozol, egy objektum (a <code>datetime</code> t√≠pusb√≥l). Az √ºres karakterl√°ncra a <code>&#39;&#39;</code>, az √ºres objektumra pedig a <code>None</code> √©rt√©ket haszn√°ljuk.</p><p>√çme a k√≥d jelenlegi √°llapot√°ban:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> csv
<span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt

<span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Create a CVS row counter and row reader.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through one row at a time, i is counter, row is entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
        <span class="token comment"># Row 0 is just column headings, ignore it.</span>
        <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token comment"># Whole name split into two at comma.</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                full_name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
                <span class="token comment"># Last name, strip extra spaces.</span>
                last_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment"># First name, strip extra spaces.</span>
                first_name <span class="token operator">=</span> full_name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
                full_name <span class="token operator">=</span> last_name <span class="token operator">=</span> first_name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>

            <span class="token comment"># Birth year integer, zero for empty string.</span>
            birth_year <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>
            
            <span class="token comment"># Date_joined is a date.</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                date_joined <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
                date_joined <span class="token operator">=</span> <span class="token boolean">None</span>
            
            <span class="token keyword">print</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> birth_year<span class="token punctuation">,</span> date_joined<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>√çme a k√≥d kimenete, amely most m√°r ki√≠rja a <code>first_name</code>, <code>last_name</code>, <code>birth_year</code> √©s <code>date_joined</code> adatokat a t√°bl√°zat minden egyes sor√°nak √°tfut√°sakor:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Annie Angst 1982 2011-01-11
Barry B√≥na√±as 1973 2012-02-11
Sandy Schadenfreude 2004 2003-03-03
Wanda Weltschmerz 1995 1994-04-24
Mindy Malaise 2006 2005-05-05
Ollie OPossum 1987 1997-07-27
  0 None
Pamela Pusillanimity 1979 2008-08-08
Done!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="booleanra-logikai-ertekre-valo-atalakitas" tabindex="-1"><a class="header-anchor" href="#booleanra-logikai-ertekre-valo-atalakitas" aria-hidden="true">#</a> Booleanra (logikai √©rt√©kre) val√≥ √°talak√≠t√°s</h3><p>A negyedik oszlop, a <code>row[3]</code> minden sorban <code>TRUE</code> vagy <code>FALSE</code> √©rt√©ket tartalmaz. Az Excel az √∂sszes nagybet≈±t haszn√°lja, amelyek automatikusan √°tker√ºlnek a CSV-f√°jlba, amikor az Excelben CSV-k√©nt mentj√ºk. A Python nagy kezd≈ëbet≈±ket haszn√°l, <code>True</code> √©s <code>False</code>. A Python rendelkezik egy egyszer≈± <code>bool()</code> f√ºggv√©nnyel az adatok Boolean √©rt√©k≈±v√© alak√≠t√°s√°hoz. A <code>bool()</code> f√ºggv√©ny nem fog hib√°zni, ha √ºres cell√°ba √ºtk√∂zik - <strong>azt a cell√°t egyszer≈±en hamisnak tekinti</strong>. Az √°talak√≠t√°s a k√∂vetkez≈ë egyszer≈± m√≥don t√∂rt√©nik:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># is_active is a Boolean, automatically False for empty string.</span>
is_active <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="floatra-lebegopontosra-valo-atalakitas" tabindex="-1"><a class="header-anchor" href="#floatra-lebegopontosra-valo-atalakitas" aria-hidden="true">#</a> Floatra (lebeg≈ëpontosra) val√≥ √°talak√≠t√°s</h3><p>Minden sor √∂t√∂dik oszlopa tartalmazza az egyenleget, amely egy doll√°r√∂sszeg. A Pythonban azt szeretn√©nk, ha a doll√°r√∂sszeg t√©nyleges numerikus √©rt√©k lenne, hogy sz√°molni tudjunk. A <code>float</code> adatt√≠pus az√©rt j√≥, mert a fill√©rekhez tizedesvessz≈ëket is megadhatunk. De van egy lehets√©ges probl√©ma. A Pythonban a lebeg≈ësz√°mok nem tartalmazhatnak doll√°rjelet (<code>$</code>) vagy vessz≈ët (<code>,</code>), ez√©rt ezeket el kell t√°vol√≠tania a karakterl√°ncb√≥l. Tov√°bb√°, nem lehetnek el√∂l √©s h√°tul sz√≥k√∂z√∂k. Ezeket k√∂nnyen elt√°vol√≠thatjuk a <code>strip()</code> met√≥dussal ‚ù§Ô∏è. A k√∂vetkez≈ë k√≥dsor l√©trehoz egy <code>str_balance</code> nev≈± v√°ltoz√≥t (<em>amely m√©g mindig egy karakterl√°nc</em>), de a doll√°rjel, a vessz≈ë √©s az esetleges sz√≥k√∂z√∂k elt√°vol√≠t√°s√°val:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Remove $, commas, leading trailing spaces.</span>
str_balance <span class="token operator">=</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ezt a m√°sodik sort a k√∂vetkez≈ëk√©ppen olvashatja: &quot;<strong>Az <code>str_balance</code> nev≈± √∫j karakterl√°nc az √∂t√∂dik oszlopban l√©v≈ë adatokb√≥l √°ll, miut√°n a doll√°rjeleket semmivel, a vessz≈ëket semmivel helyettes√≠tett√ºk, √©s elt√°vol√≠tottuk a elej√©r≈ël √©s a v√©g√©r≈ël a sz√≥k√∂z√∂ket.</strong>&quot;.</p><p>A sor alatt egy m√°sik sort is hozz√°adhatsz, hogy az l√©trehozzon egy <code>balance</code> nev≈± floatotot, amely a be√©p√≠tett <code>float()</code> met√≥dust haszn√°lja a <code>str_balance</code> karakterl√°nc floatt√° alak√≠t√°s√°ra. Az <code>int()</code> met√≥dushoz hasonl√≥an a <code>float()</code> is 0-t t√°rol, ha nem tudja √©rtelmezni azt, amikor a floatot sz√°mm√° pr√≥b√°lja alak√≠tani.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Balance is a float or zero for empty string.</span>
balance <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>str_balance <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A lenti √°br√°n l√°that√≥ k√≥dban minden a hely√©n van, bele√©rtve a <code>print()</code> sort is, amely megjelen√≠ti mind az √∂t oszlop √©rt√©k√©t az √°talak√≠t√°s ut√°n.</p><figure><img src="`+p+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>üñºÔ∏è <em>CSV f√°jl beolvas√°sa √©s Python adatt√≠pusokk√° konvert√°l√°sa.</em></p><div class="hint-container tip"><p class="hint-container-title">REGUL√ÅRIS KIFEJEZ√âSEK HASZN√ÅLATA PYTHONBAN</p><p>Felt√©telezzem, hogy ismersz m√°r m√°s programoz√°si nyelveket √©s tal√°n elgondolkodt√°l azon, hogy a <code>replace()</code> met√≥dus helyett mi√©rt nem egy regul√°ris kifejez√©st haszn√°ltunk a <em>doll√°rjel</em> √©s a <em>vessz≈ë</em> elt√°vol√≠t√°s√°ra az egyenlegb≈ël.</p><p>Nos, a regul√°ris kifejez√©sek nincsenek be√©p√≠tve a Pythonba. Teh√°t ha haszn√°lni akarod ≈ëket, akkor egy <code>import re</code> -t kell tenned a k√≥dod elej√©re, ami csak a regul√°ris kifejez√©sek helyettes√≠t√©si k√©pess√©geit haszn√°lja, erre a k√≥dod elej√©nek k√∂zel√©ben lenne sz√ºks√©ged:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> re <span class="token keyword">import</span> sub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A k√≥dban kicser√©lhetj√ºk a</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str_balance <span class="token operator">=</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>erre</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str_balance <span class="token operator">=</span> <span class="token punctuation">(</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;[\\s\\$,]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ez a sor ugyanazt teszi, mint az eredeti sor. Elt√°vol√≠tja a doll√°rjelet, a vessz≈ëket, valamint a sz√≥k√∂z√∂ket az √∂t√∂dik oszlop √©rt√©k√©b≈ël.</p></div><h2 id="csv-bol-objektumokba-es-szotarakba-valo-konvertalas" tabindex="-1"><a class="header-anchor" href="#csv-bol-objektumokba-es-szotarakba-valo-konvertalas" aria-hidden="true">#</a> CSV-b≈ël objektumokba √©s sz√≥t√°rakba val√≥ konvert√°l√°s</h2><p>M√°r l√°ttad, hogyan olvashatsz be adatokat egy CSV-f√°jlb√≥l, √©s hogyan konvert√°lhatod az adatokat az alap√©rtelmezett string adatt√≠pusb√≥l egy megfelel≈ë Python adatt√≠pusba. Mindezek mellett az adatokat oszt√°lyb√≥l gener√°lt objektumok csoportj√°ba, vagy esetleg egy nagyobb sz√≥t√°ron bel√ºli sz√≥t√°rak halmaz√°ba szeretn√©d rendezni.</p><p>Minden eddig tanult k√≥d hasznos lesz, mert sz√ºks√©ges a munka elv√©gz√©s√©hez. Hogy cs√∂kkents√ºk a p√©ld√°kban a zs√∫folts√°got, az adatok √°talak√≠t√°s√°ra szolg√°l√≥ k√ºl√∂nb√∂z≈ë k√≥dr√©szleteket saj√°t f√ºggv√©nyekbe helyezt√ºk. Ez lehet≈ëv√© teszi, hogy egy adatelemet csak a f√ºggv√©ny nev√©nek haszn√°lat√°val konvert√°ljon az √©rt√©kkel egy√ºtt, p√©ld√°ul <code>balance(row[4])</code>.</p><h3 id="csv-importalasa-python-objektumokba" tabindex="-1"><a class="header-anchor" href="#csv-importalasa-python-objektumokba" aria-hidden="true">#</a> CSV import√°l√°sa Python objektumokba</h3><p>Ha azt szeretn√©nk, hogy a CSV-f√°jl adatai objektumok list√°j√°ba legyenek rendezve, √≠rjuk a k√≥dot az itt l√°that√≥ m√≥don:</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt
<span class="token keyword">import</span> csv

<span class="token comment"># Use these functions to convert any string to appropriate Python data type.</span>
<span class="token comment"># Get just the first name from full name.</span>
<span class="token keyword">def</span> <span class="token function">fname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Get just the last name from full name.</span>
<span class="token keyword">def</span> <span class="token function">lname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Convert string to integer or zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">integer</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>


<span class="token comment"># Convert mm/dd/yyyy date to date or None if no valid date.</span>
<span class="token keyword">def</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token comment"># Convert any string to Boolean, False if no value.</span>
<span class="token keyword">def</span> <span class="token function">boolean</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span>


<span class="token comment"># Convert string to float, or to zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">floatnum</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    s_balance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>s_balance <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>


<span class="token comment"># Create an empty list of people.</span>
people <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment"># Define a class where each person is an object.</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        <span class="token builtin">id</span><span class="token punctuation">,</span>
        first_name<span class="token punctuation">,</span>
        last_name<span class="token punctuation">,</span> 
        birth_year<span class="token punctuation">,</span> 
        date_joined<span class="token punctuation">,</span> 
        is_active<span class="token punctuation">,</span> 
        balance
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">id</span>
        self<span class="token punctuation">.</span>first_name <span class="token operator">=</span> first_name
        self<span class="token punctuation">.</span>last_name <span class="token operator">=</span> last_name
        self<span class="token punctuation">.</span>birth_year <span class="token operator">=</span> birth_year
        self<span class="token punctuation">.</span>date_joined <span class="token operator">=</span> date_joined
        self<span class="token punctuation">.</span>is_active <span class="token operator">=</span> is_active
        self<span class="token punctuation">.</span>balance <span class="token operator">=</span> balance


<span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Set up a csv reader with a counter.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Skip the first row, which is column names.</span>
    f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through remaining rows one at a time, </span>
    <span class="token comment"># i is counter, row is </span>
    <span class="token comment"># entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
        <span class="token comment"># From each data row in the CSV file,</span>
        <span class="token comment"># create a Person object with unique </span>
        <span class="token comment"># id and appropriate data types, </span>
        <span class="token comment"># add to people list.</span>
        people<span class="token punctuation">.</span>append<span class="token punctuation">(</span>
            Person<span class="token punctuation">(</span>
                i<span class="token punctuation">,</span>
                fname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                lname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                integer<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                date<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                boolean<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                floatnum<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>

<span class="token comment"># When above loop is done, show all objects in the people list.</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> people<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>
        p<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>birth_year<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>date_joined<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>is_active<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>balance<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre></div><p>K√≥d kimenete:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0  Annie Angst 1982 2011-01-11 True 300.0
1  Barry B√≥na√±as 1973 2012-02-11 True -123.45
2  Sandy Schadenfreude 2004 2003-03-03 True 0.0
3  Wanda Weltschmerz 1995 1994-04-24 True 999999.99
4  Mindy Malaise 2006 2005-05-05 True 454.01
5  Ollie OPossum 1987 1997-07-27 True -1000.0
6   0 None False 0.0
7  Pamela Pusillanimity 1979 2008-08-08 True 12345.67
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="igy-mukodik-a-kod" tabindex="-1"><a class="header-anchor" href="#igy-mukodik-a-kod" aria-hidden="true">#</a> √çgy m≈±k√∂dik a k√≥d</h4><p>Az els≈ë n√©h√°ny sor a sz√ºks√©ges import√°l√°sok, majd n√©h√°ny f√ºggv√©ny k√∂vetkezik, amelyek a bej√∂v≈ë sztringadatokat Python adatt√≠pusokk√° konvert√°lj√°k. Ez a k√≥d hasonl√≥ a t√©mak√∂r kor√°bbi p√©ld√°ihoz ebben a t√©m√°ban. Csak a konverzi√≥s k√≥dot k√ºl√∂n f√ºggv√©nyekre osztottuk, hogy mindent egy kicsit sz√©tv√°lasszunk:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Use these functions to convert any string to appropriate Python data type.</span>
<span class="token comment"># Get just the first name from full name.</span>
<span class="token keyword">def</span> <span class="token function">fname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Get just the last name from full name.</span>
<span class="token keyword">def</span> <span class="token function">lname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Convert string to integer or zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">integer</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>


<span class="token comment"># Convert mm/dd/yyyy date to date or None if no valid date.</span>
<span class="token keyword">def</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token comment"># Convert any string to Boolean, False if no value.</span>
<span class="token keyword">def</span> <span class="token function">boolean</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span>


<span class="token comment"># Convert string to float, or to zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">floatnum</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    s_balance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>s_balance <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√∂vetkez≈ë sor egy √ºres list√°t hoz l√©tre <code>people</code> n√©ven, hogy helyet biztos√≠tson a program √°ltal a CSV f√°jlb√≥l l√©trehozand√≥ objektumok t√°rol√°s√°ra:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create an empty list of people.</span>
people <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ezut√°n a k√≥d defini√°l egy oszt√°lyt, amely az √∂sszes <code>Person</code> objektum gener√°l√°s√°ra szolg√°l a CSV f√°jlb√≥l:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Define a class where each person is an object.</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        <span class="token builtin">id</span><span class="token punctuation">,</span>
        first_name<span class="token punctuation">,</span>
        last_name<span class="token punctuation">,</span> 
        birth_year<span class="token punctuation">,</span> 
        date_joined<span class="token punctuation">,</span> 
        is_active<span class="token punctuation">,</span> 
        balance
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">id</span>
        self<span class="token punctuation">.</span>first_name <span class="token operator">=</span> first_name
        self<span class="token punctuation">.</span>last_name <span class="token operator">=</span> last_name
        self<span class="token punctuation">.</span>birth_year <span class="token operator">=</span> birth_year
        self<span class="token punctuation">.</span>date_joined <span class="token operator">=</span> date_joined
        self<span class="token punctuation">.</span>is_active <span class="token operator">=</span> is_active
        self<span class="token punctuation">.</span>balance <span class="token operator">=</span> balance
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A CSV f√°jl beolvas√°sa a k√∂vetkez≈ë sorokban kezd≈ëdik. A k√≥d megnyitja a <code>sample.csv</code> f√°jlt k√≥dol√°ssal. A <code>newline=&#39;&#39;</code> csak megakad√°lyozza, hogy a k√≥d az egyes sorok v√©g√©n l√©v≈ë √∫jsor karaktert az egyes sorok utols√≥ adatelem√©re illessze. Az olvas√≥ egy enumer√°tort haszn√°l a sorok olvas√°sa k√∂zbeni sz√°ml√°l√°shoz. Az <code>f.readline()</code> beolvassa az els≈ë sort, ami csak oszlopfejekb≈ël √°ll, √≠gy az ezt k√∂vet≈ë <code>for</code> a m√°sodik soron kezd≈ëdik. Az <code>i</code> v√°ltoz√≥ a <code>for</code> ciklusban a n√∂vekv≈ë sz√°ml√°l√≥, a sor pedig a <code>CSV f√°jl</code> teljes adatsora:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Set up a csv reader with a counter.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Skip the first row, which is column names.</span>
    f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through remaining rows one at a time, </span>
    <span class="token comment"># i is counter, row is </span>
    <span class="token comment"># entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√≥d a ciklus minden egyes l√©p√©s√©n√©l l√©trehoz egy <code>Person</code> objektumot a n√∂vekv≈ë sz√°ml√°l√≥b√≥l (<code>i</code>), √©s hozz√°adja az adatokat a sorban. Figyelj√ºk meg, hogy a k√≥dban kor√°bban defini√°lt f√ºggv√©nyeket h√≠vtuk meg az adatt√≠pus-√°talak√≠t√°sok elv√©gz√©s√©hez. Ez t√∂m√∂rebb√© teszi a k√≥dot, √©s egy kicsit k√∂nnyebb√© teszi az olvas√°st √©s a munk√°t:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># From each data row in the CSV file,</span>
<span class="token comment"># create a Person object with unique </span>
<span class="token comment"># id and appropriate data types, </span>
<span class="token comment"># add to people list.</span>
        people<span class="token punctuation">.</span>append<span class="token punctuation">(</span>
            Person<span class="token punctuation">(</span>
                i<span class="token punctuation">,</span>
                fname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                lname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                integer<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                date<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                boolean<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                floatnum<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Amikor a ciklus befejez≈ëd√∂tt, a k√∂vetkez≈ë k√≥d egyszer≈±en megjelen√≠ti az objektumokat a k√©perny≈ën, hogy ellen≈ërizz√ºk, hogy a k√≥d helyesen m≈±k√∂d√∂tt:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># When above loop is done, show all objects in the people list.</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> people<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>
        p<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>first_name<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>birth_year<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>date_joined<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>is_active<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>balance<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="csv-importalasa-python-szotarakba" tabindex="-1"><a class="header-anchor" href="#csv-importalasa-python-szotarakba" aria-hidden="true">#</a> CSV import√°l√°sa Python sz√≥t√°rakba</h3><p>Ha a CSV-f√°jl minden egyes adatsor√°t saj√°t sz√≥t√°rban szeretn√©nk t√°rolni, akkor az objektumok l√©trehoz√°s√°ra az el≈ëz≈ë k√≥dhoz hasonl√≥ k√≥dot haszn√°lhatunk. Az oszt√°lydefin√≠ci√≥s k√≥dra nincs sz√ºks√©g, mert itt nem fogunk objektumokat l√©trehozni.</p><p>Az <code>people</code> lista l√©trehoz√°sa helyett l√©trehozhat egy √ºres <code>people</code> sz√≥t√°rat, amely az √∂sszes egy√©ni szem√©ly sz√≥t√°rat tartalmazza, p√©ld√°ul √≠gy:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#  Create an empty dictionary of people.</span>
people <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ami a ciklust illeti, ism√©t haszn√°lhatunk egy enumer√°tort (<code>i</code>) a sorok sz√°mol√°s√°hoz, √©s ezt az egyedi √©rt√©ket haszn√°lhatjuk minden √∫j sz√≥t√°r kulcsak√©nt is. A <code>newdict=</code> kezdet≈± sor a Python be√©p√≠tett <code>dict()</code> f√ºggv√©ny√©nek seg√≠ts√©g√©vel l√©trehoz egy sz√≥t√°rat egy CSV-f√°jl sor√°nak adataival. A k√∂vetkez≈ë sor az <code>i</code> plusz 1 √©rt√©ket rendeli hozz√° minden egyes √∫jonnan l√©trehozott sz√≥t√°rhoz (<em>hogy a sz√°ml√°l√°st 0 helyett 1-gyel kezdj√ºk</em>):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Loop through remaining rows one at a time, i is counter, row is entire row.</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
    <span class="token comment"># From each data row in the CSV file, create a dictionary item with unique</span>
    <span class="token comment"># id and appropriate data types, add to people list.</span>
    newdict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;first_name&quot;</span><span class="token punctuation">:</span> fname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;last_name&quot;</span><span class="token punctuation">:</span> lname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;birth_year&quot;</span><span class="token punctuation">:</span> integer<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;date_joined&quot;</span><span class="token punctuation">:</span> date<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;is_active&quot;</span><span class="token punctuation">:</span> boolean<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;balance&quot;</span><span class="token punctuation">:</span> floatnum<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
    people<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> newdict
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Annak ellen≈ërz√©s√©re, hogy a k√≥d helyesen futott-e, v√©gighaladhatunk az people sz√≥t√°r√°nak sz√≥t√°rain, √©s minden egyes sorban megjelen√≠thetj√ºk a kulcs:√©rt√©k p√°rost minden egyes adatelemhez. A lenti √°bra mutatja a k√≥d futtat√°s√°nak eredm√©ny√©t a VS Code-ban:</p><figure><img src="`+l+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>üñºÔ∏è <em>CSV f√°jl beolvas√°sa sz√≥t√°rak sz√≥t√°r√°ba.</em></p><p>Itt van az √∂sszes k√≥d, amely beolvassa az adatokat a CSV-f√°jlokb√≥l a sz√≥t√°rakba:</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt
<span class="token keyword">import</span> csv

<span class="token comment"># Use these functions to convert any string to appropriate Python data type.</span>
<span class="token comment"># Get just the first name from full name.</span>
<span class="token keyword">def</span> <span class="token function">fname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Get just the last name from full name.</span>
<span class="token keyword">def</span> <span class="token function">lname</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        nm <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> nm<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token comment"># Convert string to integer or zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">integer</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>


<span class="token comment"># Convert mm/dd/yyyy date to date or None if no valid date.</span>
<span class="token keyword">def</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token string">&quot;%m/%d/%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token comment"># Convert any string to Boolean, False if no value.</span>
<span class="token keyword">def</span> <span class="token function">boolean</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span>


<span class="token comment"># Convert string to float, or to zero if no value.</span>
<span class="token keyword">def</span> <span class="token function">floatnum</span><span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    s_balance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">any</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">float</span><span class="token punctuation">(</span>s_balance <span class="token keyword">or</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">#  Create an empty dictionary of people.</span>
people <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment"># Open CSV file with UTF-8 encoding, don&#39;t read in newline characters.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;sample.csv&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Set up a csv reader with a counter.</span>
    reader <span class="token operator">=</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Skip the first row, which is column names.</span>
    f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Loop through remaining rows one at a time, i is counter, row is entire row.</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
        <span class="token comment"># From each data row in the CSV file, create a dictionary item with unique</span>
        <span class="token comment"># id and appropriate data types, add to people list.</span>
        newdict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token string">&quot;first_name&quot;</span><span class="token punctuation">:</span> fname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;last_name&quot;</span><span class="token punctuation">:</span> lname<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;birth_year&quot;</span><span class="token punctuation">:</span> integer<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;date_joined&quot;</span><span class="token punctuation">:</span> date<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;is_active&quot;</span><span class="token punctuation">:</span> boolean<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;balance&quot;</span><span class="token punctuation">:</span> floatnum<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
        people<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> newdict

<span class="token comment"># When above loop is done, show all objects in the people list.</span>
<span class="token keyword">for</span> person <span class="token keyword">in</span> people<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> person
    <span class="token keyword">print</span><span class="token punctuation">(</span>
        <span class="token builtin">id</span><span class="token punctuation">,</span>
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;first_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;last_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;birth_year&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;date_joined&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;is_active&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \\
        people<span class="token punctuation">[</span>person<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
</code></pre></div><p>A CSV-f√°jlokat sz√©les k√∂rben haszn√°lj√°k, mivel a t√°bl√°zatokb√≥l √©s adatb√°zis-t√°bl√°kb√≥l k√∂nnyen lehet adatokat export√°lni ebbe a form√°tumba. Az adatok kinyer√©se ezekb≈ël a f√°jlokb√≥l id≈ënk√©nt tr√ºkk√∂s lehet, de a Python csv modulja nagy seg√≠ts√©g lehet. A csv modul gondoskodik sok r√©szletr≈ël, viszonylag k√∂nnyen elv√©gezhet≈ëv√© teszi az egy-egy soron val√≥ √°tfut√°st, √©s az adatokat √∫gy kezeli, ahogyan azt a Python alkalmaz√°sodban j√≥nak l√°tod.</p><p>A CSV-hez hasonl√≥an az adatok egyszer≈± sz√∂veges form√°tumban t√∂rt√©n≈ë sz√°ll√≠t√°s√°ra √©s t√°rol√°s√°ra alkalmas a JSON, vagyis a JavaScript Object Notation.</p>`,112),u=[i];function r(k,d){return a(),s("div",null,u)}const b=n(c,[["render",r],["__file","lesson12.html.vue"]]);export{b as default};
