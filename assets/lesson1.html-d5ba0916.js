import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,a as t}from"./app-6f275e76.js";const e={},l=t(`<h1 id="_1-tananyag" tabindex="-1"><a class="header-anchor" href="#_1-tananyag" aria-hidden="true">#</a> 1. tananyag</h1><h2 id="az-egymasba-agyazott-lekerdezesek-szintaxisat" tabindex="-1"><a class="header-anchor" href="#az-egymasba-agyazott-lekerdezesek-szintaxisat" aria-hidden="true">#</a> Az egymásba ágyazott lekérdezések szintaxisát</h2><p>Az egymásba ágyazott lekérdezések (más néven al-lekérdezések vagy beágyazott lekérdezések) hasznos technikák a SQL-ben, amelyek lehetővé teszik összetett adatkinyeréseket és -manipulációkat. Ezek a lekérdezések egy lekérdezésen belül tartalmaznak egy vagy több másik lekérdezést. A következőkben bemutatom az egymásba ágyazott lekérdezések szintaxisát lépésről lépésre:</p><ol><li><p><strong>Külső lekérdezés kiválasztása:</strong></p><ul><li>Kezdd a lekérdezést a külső lekérdezés megadásával, amely tartalmazni fogja a beágyazott lekérdezést. Ebben a lekérdezésben általában az eredmények végső formáját határozzuk meg.</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2
<span class="token keyword">FROM</span> table1
<span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Beágyazott lekérdezés hozzáadása:</strong></p><ul><li>Az egymásba ágyazott lekérdezést a külső lekérdezés <code>WHERE</code> feltételében vagy a <code>JOIN</code> műveletben lehet elhelyezni. A beágyazott lekérdezés az adatok szűrésére vagy kiválasztására szolgál, és a külső lekérdezés eredményének része lesz.</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2
<span class="token keyword">FROM</span> table1
<span class="token keyword">WHERE</span> column3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> column4 <span class="token keyword">FROM</span> table2 <span class="token keyword">WHERE</span> condition<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Beágyazott lekérdezés paramétereinek meghatározása:</strong></p><ul><li>A beágyazott lekérdezésben megadhatunk feltételeket vagy értékeket, amelyeket dinamikusan állíthatunk be a külső lekérdezés eredményei alapján.</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2
<span class="token keyword">FROM</span> table1
<span class="token keyword">WHERE</span> column3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> column4 <span class="token keyword">FROM</span> table2 <span class="token keyword">WHERE</span> column5 <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Beágyazott lekérdezés eredményének használata:</strong></p><ul><li>Az egymásba ágyazott lekérdezés eredményét használhatod például összehasonlításokhoz, aggregálásokhoz vagy az összesített eredmény megjelenítéséhez a külső lekérdezésben.</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2
<span class="token keyword">FROM</span> table1
<span class="token keyword">WHERE</span> column3 <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>column4<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>További beágyazott lekérdezések hozzáadása (opcionális):</strong></p><ul><li>További beágyazott lekérdezéseket is hozzáadhatsz a külső lekérdezéshez, hogy még összetettebb feltételeket és eredményeket érj el.</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2
<span class="token keyword">FROM</span> table1
<span class="token keyword">WHERE</span> column3 <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>column4<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table2 <span class="token keyword">WHERE</span> column5 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>column6<span class="token punctuation">)</span> <span class="token keyword">FROM</span> table3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>Az egymásba ágyazott lekérdezések segítségével a SQL nyelv rendkívül erőteljes módon használható az adatok összetett lekérdezésére és manipulálására. Fontos azonban ügyelni a teljesítményre, és szükség esetén optimalizálni a lekérdezéseket, mivel az egymásba ágyazott lekérdezések bonyolultsága és mélysége befolyásolhatja a lekérdezés futási idejét.</p><hr><p>Természetesen, készítsünk egy egyszerű példaadatbázist és táblázatot, amelyek segítségével bemutathatjuk az egymásba ágyazott lekérdezések használatát. Nézzük meg a következő példákat:</p><p><strong>Példa: Egy egyszerű adatbázis tanulókkal és értékeléseikkel.</strong></p><p>Táblázatok:</p><ol><li><p><strong>students</strong> - A tanulók adatait tartalmazza.</p><ul><li>student_id (egyedi azonosító)</li><li>student_name (tanuló neve)</li><li>student_age (tanuló kor)</li><li>course_id (tanuló aktuális tanfolyamának azonosítója)</li></ul></li><li><p><strong>courses</strong> - A tanfolyamok adatait tartalmazza.</p><ul><li>course_id (egyedi azonosító)</li><li>course_name (tanfolyam neve)</li><li>instructor (tanfolyam oktatója)</li></ul></li><li><p><strong>grades</strong> - A tanulók értékeléseit tartalmazza.</p><ul><li>grade_id (egyedi azonosító)</li><li>student_id (a tanuló egyedi azonosítója)</li><li>course_id (a tanuló aktuális tanfolyamának azonosítója)</li><li>grade (tanuló érdemjegye)</li></ul></li></ol><p><strong>Táblázat: students</strong></p><table><thead><tr><th>student_id</th><th>student_name</th><th>student_age</th><th>course_id</th></tr></thead><tbody><tr><td>1</td><td>John Doe</td><td>20</td><td>1</td></tr><tr><td>2</td><td>Jane Smith</td><td>22</td><td>2</td></tr><tr><td>3</td><td>Alice Johnson</td><td>19</td><td>1</td></tr></tbody></table><p><strong>Táblázat: courses</strong></p><table><thead><tr><th>course_id</th><th>course_name</th><th>instructor</th></tr></thead><tbody><tr><td>1</td><td>Math</td><td>Prof. Johnson</td></tr><tr><td>2</td><td>Physics</td><td>Dr. Smith</td></tr></tbody></table><p><strong>Táblázat: grades</strong></p><table><thead><tr><th>grade_id</th><th>student_id</th><th>course_id</th><th>grade</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>B</td></tr><tr><td>2</td><td>1</td><td>2</td><td>A</td></tr><tr><td>3</td><td>2</td><td>1</td><td>A</td></tr><tr><td>4</td><td>3</td><td>2</td><td>B</td></tr></tbody></table><p>Most nézzünk meg néhány példát az egymásba ágyazott lekérdezésekkel:</p><ol><li><p><strong>Az összes tanuló neve és életkora, akiknek legalább egy &#39;Math&#39; nevű tanfolyamuk van:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> student_name<span class="token punctuation">,</span> student_age
<span class="token keyword">FROM</span> students
<span class="token keyword">WHERE</span> student_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> student_id <span class="token keyword">FROM</span> grades <span class="token keyword">WHERE</span> course_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> course_id <span class="token keyword">FROM</span> courses <span class="token keyword">WHERE</span> course_name <span class="token operator">=</span> <span class="token string">&#39;Math&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Azoknak a tanulóknak a neve, akiknek a &#39;Math&#39; nevű tanfolyamra legalább egy &#39;A&#39; érdemjegyet kaptak:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> student_name
<span class="token keyword">FROM</span> students
<span class="token keyword">WHERE</span> student_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> student_id <span class="token keyword">FROM</span> grades <span class="token keyword">WHERE</span> course_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> course_id <span class="token keyword">FROM</span> courses <span class="token keyword">WHERE</span> course_name <span class="token operator">=</span> <span class="token string">&#39;Math&#39;</span><span class="token punctuation">)</span> <span class="token operator">AND</span> grade <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az alábbi SQL lekérdezés eredménye azoknak a hallgatóknak a neveit tartalmazza, akik a <strong>&#39;Math&#39;</strong> kurzuson <em>(&#39;course_name = &#39;Math&#39;)</em> <strong>&#39;A&#39;</strong> érdemjegyet <em>(&#39;grade = &#39;A&#39;)</em> kaptak:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>| student_name   |
|----------------|
| Jane Smith     |
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az eredmény csak Jane Smith nevét tartalmazza, mivel csak ő felel meg a lekérdezés által meghatározott feltételeknek.</p></li><li><p><strong>Azoknak a tanulóknak a neve és átlagos életkora, akiknek több mint egy tanfolyamuk van:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> student_name<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>student_age<span class="token punctuation">)</span> <span class="token keyword">AS</span> average_age
<span class="token keyword">FROM</span> students
<span class="token keyword">WHERE</span> student_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> student_id <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> student_id<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>course_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> course_count <span class="token keyword">FROM</span> grades <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> student_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> course_counts <span class="token keyword">WHERE</span> course_counts<span class="token punctuation">.</span>course_count <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> student_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az eredményben csak John Doe található meg, mivel ő az egyetlen hallgató, aki több mint egy kurzuson vett részt (a táblázat alapján). Az átlagéletkor is csak az ő életkorát tartalmazza. Az összes többi hallgató vagy egyáltalán nem vesz részt kurzusokon, vagy csak egy kurzuson vett részt, ami nem felel meg a feltételnek, hogy a kurzusok száma több mint 1 legyen.</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>| student_name   | average_age |
|----------------|-------------|
| John Doe       | 20          |
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>Ezek a példák bemutatják, hogyan lehet egymásba ágyazott lekérdezéseket használni egy egyszerű adatbázisban, hogy komplex adatkinyerést végezhess. Azonban érdemes megjegyezni, hogy a valóságban az adatbázisok és a lekérdezések sokkal bonyolultabbak lehetnek, és az optimalizációra is figyelmet kell fordítani a teljesítmény érdekében.</p><h2 id="feladatok" tabindex="-1"><a class="header-anchor" href="#feladatok" aria-hidden="true">#</a> Feladatok</h2><p><strong>Tábla 1: Customers (Ügyfelek) tábla</strong></p><table><thead><tr><th>CustomerID</th><th>FirstName</th><th>LastName</th><th>Email</th><th>PhoneNumber</th></tr></thead><tbody><tr><td>1</td><td>John</td><td>Smith</td><td><a href="mailto:john.smith@abc.com">john.smith@abc.com</a></td><td>123-456-789</td></tr><tr><td>2</td><td>Mary</td><td>Johnson</td><td><a href="mailto:mary.j@xyz.com">mary.j@xyz.com</a></td><td>987-654-321</td></tr><tr><td>3</td><td>David</td><td>Davis</td><td><a href="mailto:david.d@def.com">david.d@def.com</a></td><td>555-555-555</td></tr><tr><td>4</td><td>Sarah</td><td>White</td><td><a href="mailto:sarah.w@ghi.com">sarah.w@ghi.com</a></td><td>333-333-333</td></tr><tr><td>5</td><td>Michael</td><td>Lee</td><td><a href="mailto:michael.l@jkl.com">michael.l@jkl.com</a></td><td>111-111-111</td></tr></tbody></table><p><strong>Tábla 2: Orders (Rendelések) tábla</strong></p><table><thead><tr><th>OrderID</th><th>CustomerID</th><th>OrderDate</th></tr></thead><tbody><tr><td>101</td><td>1</td><td>2023-01-15</td></tr><tr><td>102</td><td>2</td><td>2023-02-20</td></tr><tr><td>103</td><td>1</td><td>2023-03-05</td></tr><tr><td>104</td><td>3</td><td>2023-04-10</td></tr><tr><td>105</td><td>2</td><td>2023-05-15</td></tr></tbody></table><p><strong>Tábla 3: OrderDetails (Rendelés részletek) tábla</strong></p><table><thead><tr><th>OrderDetailID</th><th>OrderID</th><th>ProductID</th><th>Quantity</th></tr></thead><tbody><tr><td>1</td><td>101</td><td>1</td><td>2</td></tr><tr><td>2</td><td>102</td><td>2</td><td>1</td></tr><tr><td>3</td><td>102</td><td>3</td><td>3</td></tr><tr><td>4</td><td>103</td><td>1</td><td>1</td></tr><tr><td>5</td><td>104</td><td>4</td><td>2</td></tr><tr><td>6</td><td>105</td><td>5</td><td>4</td></tr></tbody></table><p><strong>Tábla 4: Products (Termékek) tábla</strong></p><table><thead><tr><th>ProductID</th><th>ProductName</th><th>UnitPrice</th></tr></thead><tbody><tr><td>1</td><td>Laptop</td><td>800.00</td></tr><tr><td>2</td><td>Mobiltelefon</td><td>400.00</td></tr><tr><td>3</td><td>Tablet</td><td>250.00</td></tr><tr><td>4</td><td>Monitor</td><td>300.00</td></tr><tr><td>5</td><td>Egér</td><td>20.00</td></tr></tbody></table><p>Nézzük akkor a feladatokat:</p><p><strong>Feladat 1:</strong> Írj egy SQL lekérdezést, amely kiválasztja az ügyfelek nevét és azok rendeléseinek számát.</p><p><strong>Megoldás 1:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LastName<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>OrderID<span class="token punctuation">)</span> <span class="token keyword">AS</span> NumberOfOrders
<span class="token keyword">FROM</span> Customers c
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> Orders o <span class="token keyword">ON</span> c<span class="token punctuation">.</span>CustomerID <span class="token operator">=</span> o<span class="token punctuation">.</span>CustomerID
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LastName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Feladat 2:</strong> Írj egy SQL lekérdezést, amely listázza azokat a termékeket (ProductID, ProductName), amelyekből kevesebb, mint 10 darab van a raktárkészleten.</p><p><strong>Megoldás 2:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>ProductID<span class="token punctuation">,</span> p<span class="token punctuation">.</span>ProductName
<span class="token keyword">FROM</span> Products p
<span class="token keyword">JOIN</span> Inventory i <span class="token keyword">ON</span> p<span class="token punctuation">.</span>ProductID <span class="token operator">=</span> i<span class="token punctuation">.</span>ProductID
<span class="token keyword">WHERE</span> i<span class="token punctuation">.</span>QuantityInStock <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Feladat 3:</strong> Írj egy SQL lekérdezést, amely meghatározza a legtöbb rendelést leadó ügyfél nevét és a rendelések számát.</p><p><strong>Megoldás 3:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LastName<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>OrderID<span class="token punctuation">)</span> <span class="token keyword">AS</span> OrderCount
<span class="token keyword">FROM</span> Customers c
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> Orders o <span class="token keyword">ON</span> c<span class="token punctuation">.</span>CustomerID <span class="token operator">=</span> o<span class="token punctuation">.</span>CustomerID
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>LastName
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> OrderCount <span class="token keyword">DESC</span>
<span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Feladat 4:</strong> Írj egy SQL lekérdezést, amely kiválasztja azokat a rendeléseket (OrderID), amelyekhez tartozik laptop (ProductID: 1).</p><p><strong>Megoldás 4:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> od<span class="token punctuation">.</span>OrderID
<span class="token keyword">FROM</span> OrderDetails od
<span class="token keyword">WHERE</span> od<span class="token punctuation">.</span>ProductID <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Feladat 5:</strong> Írj egy SQL lekérdezést, amely meghatározza a legdrágább terméket (ProductName) és annak az árát.</p><p><strong>Megoldás 5:</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>ProductName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>UnitPrice
<span class="token keyword">FROM</span> Products p
<span class="token keyword">WHERE</span> p<span class="token punctuation">.</span>UnitPrice <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>UnitPrice<span class="token punctuation">)</span> <span class="token keyword">FROM</span> Products<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,44),o=[l];function d(r,p){return s(),n("div",null,o)}const k=a(e,[["render",d],["__file","lesson1.html.vue"]]);export{k as default};
