import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,a as n}from"./app-6f275e76.js";const s={},r=n(`<h1 id="_1-tananyag" tabindex="-1"><a class="header-anchor" href="#_1-tananyag" aria-hidden="true">#</a> 1. tananyag</h1><h2 id="bevezeto" tabindex="-1"><a class="header-anchor" href="#bevezeto" aria-hidden="true">#</a> Bevezető</h2><p>Ez a tantárgy útmutató a JavaScript kód írásának elkezdéséhez. A JavaScript programozási nyelvekhez képest viszonylag könnyen elsajátítható és használható. Mivel könnyen hozzáférhető, sokan, akik weblapkészítőként kezdték, olyan helyzetben találták magukat, hogy a JavaScript-kód karbantartásáért, módosításáért és megírásáért kell felelniük.</p><p>Akár tudsz egy kicsit JavaScriptet, akár még sosem láttál ilyet, ez az anyag megmutatja, hogyan írj JavaScriptet a helyes módon.</p><p>A tantárgyban tárgyalt témák a következők:</p><ul><li>A JavaScript programok alapvető struktúráinak megértése</li><li>A JavaScript integrálása a HTML5 és a CSS3 használatával</li><li>A programok strukturálása függvényekkel</li><li>Munka JavaScript objektumokkal</li><li>Haladó JavaScript-technikák használata, például AJAX, visszahívások (callbacks) és lezárások (closures)</li></ul><p>A JavaScript tanulása nem csak a nyelv szintaxisának elsajátításáról szól. Hanem a nyelv köré épült eszközökhöz és közösséghez való hozzáférésről is. A professzionális JavaScript-programozók a nyelv hosszú és izgalmas története során nagymértékben finomították a JavaScript írásához használt eszközöket és technikákat. Az anyagban végig megemlítjük a teszteléshez, dokumentáláshoz és a jobb kód gyorsabb megírásához szükséges gyakorlatokat és eszközöket!</p><h3 id="elso-lepesek-a-javascript-hasznalataval" tabindex="-1"><a class="header-anchor" href="#elso-lepesek-a-javascript-hasznalataval" aria-hidden="true">#</a> Első lépések a JavaScript használatával</h3><div class="hint-container tip"><p class="hint-container-title">Ebben az anyagban:</p><ul><li>A JavaScript megismerése</li><li>A JavaScript működésének megismerése</li><li>Annak megértése, hogy miért van szükségünk JavaScriptre</li></ul></div><p>A JavaScriptet nem mindig tartották olyan nagyra, mint manapság. Egyesek a világ legjobb és legrosszabb programozási nyelvének nevezték. Az elmúlt néhány évben rengeteg fejlesztés történt a programozók JavaScript-írási módjában és a JavaScript-értelmezésében. Ezek a fejlesztések a JavaScriptet ma sokkal jobb nyelvvé tették, mint korábban.</p><p>Ebben a fejezetben megtudhatjuk, hogy mi is a JavaScript, és egy kicsit a nyelv történetét is megismerhetjük. Azt is megtudhatjuk, hogy mit tud a JavaScript, és miért kell ismernünk.</p><h3 id="mi-az-a-javascript" tabindex="-1"><a class="header-anchor" href="#mi-az-a-javascript" aria-hidden="true">#</a> Mi az a JavaScript?</h3><p>Az internet kezdeti időszakában a böngészők egyszerű olvasóprogramok voltak a weboldalak számára. Gyakorlatilag semmilyen képességük nem volt, kivéve a szöveg különböző méretű betűtípusokkal történő megjelenítésére. Amint a <strong>Microsoft</strong> kiadta <strong>Internet Explorer</strong> böngészőjét, a böngészőháború elkezdődött, és a funkciók elkezdtek repkedni! Az egyik böngésző bevezette a képek megjelenítésének képességét, majd egy másik bevezette a különböző betűtípusok megjelenítésének képességét, majd villogó szöveg, mozgó szöveg és mindenféle egyéb furcsa képességek jelentek meg!</p><p>Nem telt el sok idő, mire valakinek az az ötlete támadt, hogy a böngészők maguk is tudnak hasznos dolgokat csinálni, ahelyett, hogy csak díszes dokumentummegjelenítő programként működnének.</p><p>A JavaScript 1995-ben indult a Netscape-nél. A JavaScript megalkotója, <strong>Brandon Eich</strong> rekordidő alatt (egyesek szerint tíz nap alatt!) írta meg a JavaScriptet, számos más programnyelv legjobb tulajdonságait kölcsönözve. A piacra lépés rohanása néhány érdekes furcsaságot (<em>vagy kevésbé udvariasan fogalmazva: hibát</em>) is okozott a nyelv tervezésében. Az eredmény egyfajta eszperantó-szerű nyelv, amely megtévesztően ismerősnek tűnik a más programozási nyelvekben jártas emberek számára.</p><p>A JavaScript eredeti neve Mocha volt. A Netscape Navigator első bétaverziójának megjelenésekor LiveScriptre nevezték át, majd a Netscape 2 böngészőbe való beépítésekor, 1995-ben JavaScriptre változtatták. A Microsoft nagyon gyorsan visszafejtette a JavaScriptet, és bevezette annak pontos klónját az Internet Explorerben, Jscriptnek nevezve azt, hogy megkerülje a védjegyekkel kapcsolatos problémákat.</p><p>A Netscape benyújtotta a JavaScriptet az Ecma International nevű szabványügyi szervezetnek, és 1997-ben ECMAScript néven elfogadták és szabványosították.<br> Brandon Eich, a JavaScript megalkotója híres megjegyzéseket tett a szabványosított nyelv nevével kapcsolatban; kijelentette, hogy az ECMAScript egy &quot;nem kívánt kereskedelmi név, amely úgy hangzik, mint egy bőrbetegség&quot;.</p><p>Ha már tudsz programozni Java nyelven, vagy ha valamikor megtanultad, akkor nagyon jó, ha szem előtt tartod, hogy a két nyelvnek ugyan van némi hasonlósága, de valójában teljesen különböző.</p><h4 id="tobb-effektre-van-szuksegunk" tabindex="-1"><a class="header-anchor" href="#tobb-effektre-van-szuksegunk" aria-hidden="true">#</a> Több effektre van szükségünk!</h4><p>Amikor a JavaScript debütált, gyorsan népszerűvé vált, mivel a weboldalak dinamikusabbá tételének egyik módja volt. Az úgynevezett dinamikus HTML (DHTML) a JavaScript webböngészőkbe való beépítésének korai eredménye volt, és mindenféle szórakoztató hatást tett lehetővé, például a hulló hópehely-effektust, a felugró ablakokat, de olyan hasznosabb dolgokat is, mint a legördülő menük és az űrlapérvényesítés.</p><h4 id="a-javascript-novekedese" tabindex="-1"><a class="header-anchor" href="#a-javascript-novekedese" aria-hidden="true">#</a> A JavaScript növekedése</h4><p>A JavaScript immár harmadik évtizedébe lépve a világ legszélesebb körben használt programozási nyelvévé vált, és gyakorlatilag a világ minden személyi számítógépén van legalább egy olyan böngésző, amely képes JavaScript kódot futtatni.</p><p>A JavaScript elég rugalmas ahhoz, hogy a nem profi programozók is használhassák és megtanulhassák, de elég erős ahhoz, hogy a profi programozók is használják is, hogy az interneten ma már szinte minden weboldalon működőképes, az egyoldalas honlapoktól kezdve az olyan gigantikus oldalakig, mint a Google, az Amazon, a Facebook és még sok-sok más!</p><h4 id="dinamikus-szkriptnyelv" tabindex="-1"><a class="header-anchor" href="#dinamikus-szkriptnyelv" aria-hidden="true">#</a> Dinamikus szkriptnyelv</h4><p>A JavaScriptet gyakran dinamikus szkriptnyelvként írják le. Ahhoz, hogy megértsük, mit jelent ez, először is meg kell határoznunk néhány fogalmat, és némi összefüggést kell látnunk.</p><h3 id="gyakori-tevhitek-a-javascriptrol" tabindex="-1"><a class="header-anchor" href="#gyakori-tevhitek-a-javascriptrol" aria-hidden="true">#</a> Gyakori tévhitek a JavaScriptről</h3><p>Az évek során a JavaScriptről elég csúnya dolgokat mondtak. Bár a felvetések néha érdekesek, nem mindig igazak. Az alábbi lista néhány gyakori tévhitet ismertet a JavaScriptről:</p><p><strong>Mítosz</strong>: A JavaScript nem igazi programozási nyelv.<br><strong>Valóság</strong>: A JavaScriptet gyakran triviális feladatokra használják a webböngészőkben, de ettől még nem lesz kevésbé programozási nyelv. Valójában a JavaScript számos olyan fejlett funkcióval rendelkezik, amelyek javították a programozási nyelvek színvonalát, és amelyeket ma már olyan nyelvek is utánoznak, mint a PHP, a C++ vagy akár a Java.</p><p><strong>Mítosz</strong>: A JavaScript a Javaval rokon.<br><strong>Valóság</strong>: Nem. A JavaScript nevet pusztán marketingstratégiaként találták ki, mivel a Java hihetetlenül népszerű volt a JavaScript megjelenésekor.</p><p><strong>Mítosz</strong>: A JavaScript új programozási nyelv.<br><strong>Valóság</strong>: A JavaScript már több mint 20 éve létezik! Az általunk ismert professzionális JavaScript-programozók közül néhányan még meg sem születtek, amikor a JavaScriptet létrehozták.</p><p><strong>Mítosz</strong>: A JavaScript hibás, és különböző böngészőkben eltérően fut.<br><strong>Valóság</strong>: Bár ez bizonyos esetekben igaz volt, a böngészők gyártói már régen úgy döntöttek, hogy a JavaScript szabványosított verzióját támogatják. Ma már minden böngésző ugyanúgy futtatja a JavaScriptet.</p><p>A számítógépes programok olyan utasításkészletek, amelyek a számítógépeket bizonyos dolgok elvégzésére késztetik. Minden számítógépes programozási nyelvnek van egy utasításkészlete és egy bizonyos módja, ahogyan az embereknek ezeket az utasításokat meg kell írniuk. A számítógép nem tudja közvetlenül megérteni ezeket az utasításokat. Ahhoz, hogy a számítógép megértsen egy programozási nyelvet, át kell mennie egy átalakítási folyamaton, amely az ember által olvasható (és írható) utasításokat gépi nyelvre fordítja. Attól függően, hogy ez a fordítás mikor történik, a programozási nyelvek nagyjából két típusra oszthatók: fordított (<em>compiled</em>) és értelmezett (<em>interpreted</em>) nyelvek.</p><h4 id="forditott-programozasi-nyelvek" tabindex="-1"><a class="header-anchor" href="#forditott-programozasi-nyelvek" aria-hidden="true">#</a> Fordított programozási nyelvek</h4><p>A fordított programozási nyelvek olyan nyelvek, amelyekben a programozónak meg kell írnia a kódot, majd egy speciális programon, az úgynevezett fordítóprogramon kell lefuttatnia, amely értelmezi az adott kódot, majd gépi nyelvre alakítja át. A számítógép ezután tudja végrehajtani a lefordított programot. A lefordított nyelvek közé tartozik például a C, C++. Fortran, Java, Objective-C és COBOL.</p><h4 id="ertelmezett-programozasi-nyelvek" tabindex="-1"><a class="header-anchor" href="#ertelmezett-programozasi-nyelvek" aria-hidden="true">#</a> Értelmezett programozási nyelvek</h4><p>Az értelmezett nyelveket technikailag még mindig a számítógép fordítja gépi nyelvre, de a fordítást a felhasználó webböngészője végzi közvetlenül a program futtatása közben. Az értelmezett nyelveket író programozóknak nem kell a kódot lefordítaniuk, mielőtt átadnák a számítógépnek futtatásra.</p><p>Az értelmezett nyelven történő programozás előnye, hogy a programon bármikor könnyű változtatásokat eszközölni. Hátránya azonban, hogy a kód futtatás közbeni lefordítása újabb lépést jelent a folyamatban, és lelassíthatja a programok teljesítményét.</p><p>Részben e teljesítménytényező miatt az értelmezett nyelvek a kevésbé komoly programozási nyelvek hírében állnak. A jobb just-in-time fordítóprogramok és a gyorsabb számítógépes processzorok miatt azonban ez a megítélés gyorsan változik. A JavaScript nagy hatással van erre.</p><p>Az értelmezett programozási nyelvek közé tartozik például a PHP, a Perl, a Haskell, a Ruby és természetesen a JavaScript.</p><p>A JavaScript segítségével engedélyezhető funkciók listája igen széles, és az egyszerű értesítésektől kezdve, amelyeket akkor kap, ha elfelejtett kitölteni egy űrlap kötelező mezőjét, egészen az olyan összetett alkalmazásokig terjed, mint a Google Docs vagy a Facebook.</p><h4 id="miert-javascript" tabindex="-1"><a class="header-anchor" href="#miert-javascript" aria-hidden="true">#</a> Miért JavaScript?</h4><p>A JavaScript vált a webes dinamikus felhasználói felületek létrehozásának szabványává. Nagyjából minden alkalommal, amikor egy animációval, élő adatokkal, gombbal vagy legördülő menüvel rendelkező weboldalt látogatsz meg, JavaScriptet használ. A JavaScript-kódolás a modern webfejlesztők számára a legnépszerűbb és legszükségesebb készség, mivel minden böngészőben futtatható, ezért a JavaScript-kódolás a legnépszerűbb és legszükségesebb készség, amellyel egy modern webfejlesztőnek rendelkeznie kell.</p><h4 id="a-javascript-konnyen-tanulhato" tabindex="-1"><a class="header-anchor" href="#a-javascript-konnyen-tanulhato" aria-hidden="true">#</a> A JavaScript könnyen tanulható</h4><p>A programozási nyelveket azért hozták létre, hogy hogy az emberek egyszerű módon beszélhessenek a számítógépekkel, és megmondhassák nekik, mit tegyenek. A gépi nyelvhez képest, vagyis ahhoz a nyelvhez képest, amelyet a számítógép processzora beszél, minden programozási nyelv egyszerű és érthető. Hogy ízelítőt adjunk abból, hogy a számítógép valójában milyen utasításoknak engedelmeskedik, íme egy gépi nyelvű program a &quot;Hello World&quot; kiírására.</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>b8 21 0a 00 00
a3 80 00 00 64
b8 10 00 00 00
a3 6f 2c 20 57
b9 48 65 6c 6c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Most nézzük meg, hogyan lehet ezt az egyszerű feladatot JavaScript segítségével elvégezni:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Sokkal könnyebb, ugye?</p>`,48),l=[r];function i(o,k){return a(),t("div",null,l)}const m=e(s,[["render",i],["__file","lesson1.html.vue"]]);export{m as default};
