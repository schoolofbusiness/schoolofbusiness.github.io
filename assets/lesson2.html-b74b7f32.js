import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as i,c as k,b as l,a as s,d as a,e as t}from"./app-6f275e76.js";const r={},z=s('<h1 id="_2-tananyag" tabindex="-1"><a class="header-anchor" href="#_2-tananyag" aria-hidden="true">#</a> 2. tananyag</h1><h2 id="az-er-modell-szerepet-es-jelolesrendszere" tabindex="-1"><a class="header-anchor" href="#az-er-modell-szerepet-es-jelolesrendszere" aria-hidden="true">#</a> Az ER-modell szerepét és jelölésrendszere</h2><p>Az ER-modell (Entity-Relationship model) egy adatmodellezési módszer, amelyet az adatbázisok tervezése során használnak az adatok és azok közötti kapcsolatok reprezentálására. Az ER-modell segít az adatok struktúrájának és szervezettségének megértésében, és lehetővé teszi az adatbázis tervezésének előkészítését. Az ER-modell három fő komponenst tartalmaz: entitásokat, attribútumokat és kapcsolatokat.</p><h3 id="_1-entitasok" tabindex="-1"><a class="header-anchor" href="#_1-entitasok" aria-hidden="true">#</a> 1. Entitások</h3><ul><li>Az entitások olyan dolgok, objektumok vagy fogalmak, amelyekről információkat szeretnénk tárolni az adatbázisban.</li><li>Minden entitásnak van egy neve, ami egyediséget biztosít számukra.</li><li>Az entitásokat általában ellátjuk attribútumokkal, amelyek leírják az entitás tulajdonságait vagy jellemzőit.</li></ul><h3 id="_2-attributumok" tabindex="-1"><a class="header-anchor" href="#_2-attributumok" aria-hidden="true">#</a> 2. Attribútumok</h3><ul><li>Az attribútumok az entitások tulajdonságait vagy jellemzőit reprezentálják.</li><li>Például egy &quot;Customer&quot; entitásnak attribútumai lehetnek a neve, címe, telefonszáma, stb.</li><li>Az attribútumoknak lehet típusa (pl. szöveg, szám, dátum stb.), és lehetnek további tulajdonságaik (pl. egyedi azonosító, kötelező vagy opcionális mező stb.).</li></ul><h3 id="_3-kapcsolatok" tabindex="-1"><a class="header-anchor" href="#_3-kapcsolatok" aria-hidden="true">#</a> 3. Kapcsolatok</h3><ul><li>A kapcsolatok az entitások közötti kapcsolatokat vagy összekötéseket reprezentálják.</li><li>Például egy &quot;Order&quot; entitás kapcsolható egy &quot;Customer&quot; entitáshoz, mivel az egy megrendeléshez tartozik egy ügyfél.</li><li>A kapcsolatoknak lehetnek attribútumaik is, amelyek további információkat tartalmazhatnak a kapcsolatról.</li></ul><p>Az ER-modell ábrázolására általában ER-diagramokat használunk, amelyekben a különböző entitásokat négyzetekkel, az attribútumokat ellipszisekkel, a kapcsolatokat vonalakkal és nyilakkal ábrázoljuk. A vonalak és nyilak megmutatják, hogy mely entitások között vannak kapcsolatok, és az attribútumokat az entitásokhoz vagy a kapcsolatokhoz kapcsoljuk.</p><p>Az ER-modell segít az adatbázis tervezésében és a kapcsolatok megértésében, ami kulcsfontosságú a hatékony adatbázisok kialakításában és kezelésében. Az ER-modell szerepe adataink struktúrájának és szervezettségének előzetes tervezése, mielőtt azokat az adatbázisrendszerekbe implementálnánk. Ezáltal könnyebben megérthetjük az adatok közötti összefüggéseket és optimalizálhatjuk az adatbázis lekérdezéseket.</p><h2 id="az-er-modell-relacios-modellre-valo-atalakitasanak-szabalyai" tabindex="-1"><a class="header-anchor" href="#az-er-modell-relacios-modellre-valo-atalakitasanak-szabalyai" aria-hidden="true">#</a> Az ER-modell relációs modellre való átalakításának szabályai</h2><p>Az ER-modell átalakítása relációs modellre az adatbázis tervezés folyamatának fontos része. Az átalakítás során az ER-diagramban megadott entitásokat, attribútumokat és kapcsolatokat relációkká (táblák) és kapcsolatokká (kulcsok) alakítjuk át. Az átalakítás szabályai segítenek ezt a folyamatot strukturáltan végrehajtani. Az alábbiakban ismertetem és alkalmazom az átalakítás szabályait:</p><h3 id="_1-entitasok-atalakitasa-relaciokka" tabindex="-1"><a class="header-anchor" href="#_1-entitasok-atalakitasa-relaciokka" aria-hidden="true">#</a> 1. Entitások átalakítása relációkká</h3><ul><li>Minden ER-modellben lévő entitást át kell alakítani egy relációvá (táblává) a relációs adatbázisban.</li><li>Az entitás neve lesz a tábla neve, és az attribútumok nevei lesznek a tábla oszlopainak nevei.</li></ul><p><strong>Példa:</strong><br> ER-modell entitás: Customer (attribútumok: CustomerID, FirstName, LastName)<br> Relációs tábla: Customer (oszlopok: CustomerID, FirstName, LastName)</p>',16),d=a("h3",{id:"_2-kapcsolatok-atalakitasa-relaciokka",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-kapcsolatok-atalakitasa-relaciokka","aria-hidden":"true"},"#"),t(" 2. Kapcsolatok átalakítása relációkká")],-1),m=a("ul",null,[a("li",null,"Az ER-modellben lévő kapcsolatokat is át kell alakítani relációkká a relációs adatbázisban."),a("li",null,"A kapcsolatoknál az idegen kulcsok (foreign keys) segítenek a kapcsolatok létrehozásában.")],-1),u=a("p",null,[a("strong",null,"Példa:"),a("br"),t(" ER-modell kapcsolat: Order (1) - (N) Customer"),a("br"),t(" Relációs tábla: Order (oszlopok: OrderID, CustomerID, OrderDate)")],-1),b=a("ul",null,[a("li",null,"A CustomerID egy idegen kulcs (foreign key), amely kapcsolatot teremt a Customer táblával.")],-1),h=a("h3",{id:"_3-m-n-kapcsolatok-atalakitasa",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_3-m-n-kapcsolatok-atalakitasa","aria-hidden":"true"},"#"),t(" 3. M:N kapcsolatok átalakítása")],-1),g=a("ul",null,[a("li",null,"Ha az ER-modellben egy M:N kapcsolat van, akkor át kell alakítani egy köztes táblává (kapcsolat táblává), amely tartalmazza az M és N entitások idegen kulcsait.")],-1),c=a("p",null,[a("strong",null,"Példa:"),a("br"),t(" ER-modell kapcsolat: Student (M) - (N) Course"),a("br"),t(" Relációs tábla: Enrollment (oszlopok: StudentID, CourseID)")],-1),y=a("ul",null,[a("li",null,"Az Enrollment tábla tartalmazza a StudentID és CourseID idegen kulcsokat, amelyek a Student és Course táblákkal kapcsolatot teremtenek.")],-1),p=a("h3",{id:"_4-tobberteku-attributumok-atalakitasa",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-tobberteku-attributumok-atalakitasa","aria-hidden":"true"},"#"),t(" 4. Többértékű attribútumok átalakítása")],-1),v=a("ul",null,[a("li",null,"Ha az ER-modellben olyan entitás attribútum szerepel, amely több értéket tartalmazhat (pl. egy több telefon számát tároló attribútum), akkor ezt általában külön relációs táblában kell tárolni, ahol minden érték egy sorban van.")],-1),_=a("p",null,[a("strong",null,"Példa:"),a("br"),t(" ER-modell entitás: Employee (attribútum: PhoneNumbers)"),a("br"),t(" Relációs tábla: EmployeePhoneNumbers (oszlopok: EmployeeID, PhoneNumber)")],-1),j=s('<p>Az ER-modell átalakítása relációs modellre meghatározza, hogyan lesznek az adatok tárolva a relációs adatbázisban, és hogyan állnak kapcsolatban egymással. Ez a lépés fontos az adatbázis tervezés során, mivel segít megőrizni az adatok integritását és egységességét, valamint hatékonyan lehet lekérdezni az adatokat a későbbi felhasználás során. Az átalakítás szabályai biztosítják, hogy az ER-modell átmenjen a relációs adatbázis modelljébe anélkül, hogy információ veszteség keletkezne vagy az adatok struktúrája összezavarodna.</p><h2 id="a-tobberteku-attributumok-atalakitasanak-lehetosegei" tabindex="-1"><a class="header-anchor" href="#a-tobberteku-attributumok-atalakitasanak-lehetosegei" aria-hidden="true">#</a> A többértékű attribútumok átalakításának lehetőségei</h2><p>A többértékű attribútumok átalakítása egy adatbázis tervezési folyamat, amely során a relációs adatmodellben található többértékű attribútumokat, például többértékű attribútumokat vagy összetett attribútumokat úgy alakítjuk át, hogy azok a harmadik normálformába (3NF) vagy más magasabb normálformába kerüljenek. A normálformák segítenek az adatok redundanciájának csökkentésében és az adatbázisok integritásának biztosításában. Az alábbiakban bemutatom a többértékű attribútumok átalakításának lehetőségeit és példákat is adok rájuk:</p><h3 id="attributum-szetvalasztasa" tabindex="-1"><a class="header-anchor" href="#attributum-szetvalasztasa" aria-hidden="true">#</a> Attribútum szétválasztása</h3><ul><li>Az egy attribútumon belüli több értéket külön relációkban vagy táblákban tároljuk.</li></ul><p><em>Példa:</em></p><p>Vegyük például egy &quot;Felhasználó&quot; táblát, amely tartalmazza a felhasználók nevét és telefonszámát egy &quot;Telefonszámok&quot; attribútumban. Az átalakítás során szétválasztjuk ezt az attribútumot a következőképpen:</p><p>&quot;User&quot; tábla: UserID, UserName<br> &quot;PhoneNumbers&quot; tábla: UserID, PhoneNumber, PhoneNumberType</p>',8),A=a("h3",{id:"osszetett-attributum-szetvalasztasa",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#osszetett-attributum-szetvalasztasa","aria-hidden":"true"},"#"),t(" Összetett attribútum szétválasztása")],-1),E=a("ul",null,[a("li",null,"Összetett attribútumokat alapvető attribútumokra bontjuk szét.")],-1),S=a("p",null,[a("em",null,"Példa:")],-1),f=a("p",null,'Tegyük fel, hogy egy "Lakcím" összetett attribútumot tartalmaz egy "Ügyfél" tábla. Az átalakítás során szétválasztjuk az összetett attribúmumot:',-1),D=a("p",null,'"Customer" tábla: CustomerID, Name, Street, City, ZipCode',-1),I=a("h3",{id:"relacio-bevezetese",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#relacio-bevezetese","aria-hidden":"true"},"#"),t(" Reláció bevezetése")],-1),L=a("ul",null,[a("li",null,"Egy új relációt hozunk létre a többértékű attribútumoknak.")],-1),J=a("p",null,[a("em",null,"Példa:")],-1),N=a("p",null,'Egy "Könyv" táblánk van, amely tartalmazza az írók neveit többértékű attribútumként. Az átalakítás során egy külön "Írók" táblát hozunk létre:',-1),R=a("p",null,[t('"Book" tábla: BookID, Title, Authors'),a("br"),t(' "Authors" tábla: AuthorID, Name')],-1),K=a("p",null,'Az "Authors" táblában az "AuthorID" lenne az elsődleges kulcs, és az "Authors" és "Book" táblák közötti kapcsolatot egy idegen kulcs biztosítja.',-1),U=a("h3",{id:"gyenge-entitasok-hasznalata",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gyenge-entitasok-hasznalata","aria-hidden":"true"},"#"),t(" Gyenge entitások használata")],-1),q=a("ul",null,[a("li",null,"Gyenge entitásokat használhatunk olyan többértékű attribútumok kezelésére, amelyek függnek egy másik entitástól.")],-1),C=a("p",null,[a("em",null,"Példa:")],-1),x=a("p",null,'Egy "Ház" entitás tartalmazza az egyedi házszámokat, de ezek függenek egy "Utca" entitástól. A gyenge entitások használatával kezeljük ezt a kapcsolatot:',-1),F=a("p",null,[t('"Street" entitás: StreetID, StreetName'),a("br"),t(' "House" gyenge entitás: HouseNumber, StreetID (Az "StreetID" lenne az idegen kulcs az "Street" entitáshoz.)')],-1),T=a("h3",{id:"ismetlodo-csoportok-kivonasa",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ismetlodo-csoportok-kivonasa","aria-hidden":"true"},"#"),t(" Ismétlődő csoportok kivonása")],-1),O=a("ul",null,[a("li",null,"Ismétlődő értékeket tartalmazó attribútumokat kivonhatjuk egy külön relációból, és hivatkozhatunk rájuk a fő entitásban.")],-1),M=a("p",null,[a("em",null,"Példa:")],-1),Q=a("p",null,'Egy "Rendelés" táblánk van, amely tartalmazza a rendelések termékeit egy ismétlődő csoportként. Az átalakítás során egy külön "Rendelési sor" táblát hozunk létre:',-1),P=a("p",null,[t('"Order" tábla: OrderID, CustomerName, OrderDate'),a("br"),t(' "OrderLine" tábla: OrderLineID, OrderID, ProductName, Quantity'),a("br"),t(' Az "OrderLine" tábla segít kezelni az ismétlődő termékeket az "Order" táblához képest, és minimalizálja az adatok ismétlődését.')],-1),X=s('<p>Ezek a módszerek segítenek az adatbázisok tervezésében, hogy hatékonyan kezeljék a többértékű attribútumokat, minimalizálják az adatok ismétlődését és biztosítsák az adatintegritást. A megfelelő átalakítási módszer kiválasztása az adott probléma és adatmodell alapján történik.</p><h2 id="n-agu-kapcsolatok" tabindex="-1"><a class="header-anchor" href="#n-agu-kapcsolatok" aria-hidden="true">#</a> N-ágú kapcsolatok</h2><p>Vegyünk például egy iskolai adatbázist, amelyben tanulók, tantárgyak és tanárok vannak, és azt szeretnénk rögzíteni, hogy melyik tanuló milyen tantárgyat tanul és melyik tanár tanítja azt a tantárgyat. Eredetileg egy N-ágú kapcsolatunk lenne, ami így nézne ki:</p><ul><li>Students</li><li>Subjects</li><li>Teachers</li><li>N-ágú kapcsolat: Students_Subjects</li></ul><p>Az N-ágú kapcsolat átalakításához hozzunk létre egy átmeneti táblát, amelyet &quot;Students_Subjects&quot; néven nevezünk el. Ez az átmeneti tábla segít rögzíteni, hogy mely tanuló milyen tantárgyat tanul, és melyik tanár tanítja azt a tantárgyat. Itt vannak a táblák:</p><ol><li><p>Students</p><ul><li>StudentID (Primary Key)</li><li>StudentName</li></ul></li><li><p>Subjects</p><ul><li>SubjectID (Primary Key)</li><li>SubjectName</li></ul></li><li><p>Teachers</p><ul><li>TeacherID (Primary Key)</li><li>TeacherName</li></ul></li><li><p>Students_Subjects</p><ul><li>ID (Primary Key)</li><li>StudentID (Foreign Key hivatkozva a Students táblára)</li><li>SubjectID (Foreign Key hivatkozva a Subjects táblára)</li><li>TeacherID (Foreign Key hivatkozva a Teachers táblára)</li></ul></li></ol><p>Ebben a példában a &quot;Students_Subjects&quot; tábla működik az átmeneti táblaként az N-ágú kapcsolat helyett. Ez az átmeneti tábla lehetővé teszi a tanulók, tantárgyak és tanárok közötti kapcsolatok kezelését, és lehetővé teszi a lekérdezések végrehajtását, például azt, hogy melyik tanuló tanulja melyik tantárgyat, és melyik tanár tanítja azt a tantárgyat.</p>',7),B=a("h2",{id:"a-gyenge-egyed-azonositasa",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#a-gyenge-egyed-azonositasa","aria-hidden":"true"},"#"),t(" A gyenge egyed azonosítása")],-1),V=a("p",null,'A "gyenge egyed" kifejezés a relációs adatbázisok területén használt fogalom, amely arra utal, hogy egy adott táblában nincs egyedi azonosító mező vagy kulcs, amely egyedülállóan azonosítaná az egyes rekordokat. Ezzel szemben a "erős egyedek" olyan táblákban találhatók, ahol van egy vagy több olyan mező, amelyek egyedülállóan azonosítják a rekordokat, például egy azonosító szám vagy egyedi azonosító.',-1),w=a("p",null,"A gyenge egyedek azok a táblák, amelyek nem rendelkeznek saját egyedi azonosítóval, és általában más táblákkal vagy relációkkal vannak kapcsolatban. A gyenge egyedek az azonosításukhoz más mezőket használnak, amelyek egy másik táblában található egyedi azonosítóra vagy kulcsra mutatnak.",-1),Z=a("p",null,'Például vegyük egy rendelések és tételek adatbázisát. A "Rendelések" táblában lehet egy "rendelés azonosító" mező, amely egyedi azonosítót tartalmaz, így erős egyedekről beszélünk. Azonban a "Tételek" táblában lehet egy "rendelés azonosító" mező is, amely azt mutatja, hogy melyik rendeléshez tartozik az adott tétel. Ez a mező nem egyedi azonosító, mivel több tétel is tartozhat ugyanahhoz a rendeléshez. Tehát a "Tételek" tábla esetében gyenge egyedekről beszélünk, és az azonosításukhoz az "rendelés azonosító" mezőt kell használni.',-1),W=a("p",null,"Gyenge egyedek esetén az azonosításukhoz gyakran több mezőt kell kombinálni, hogy egyedülálló azonosítót képezzenek. Az ilyen mezők kombinációja a gyenge egyed kulcsa vagy azonosítója. Az adatbázis-tervezés során fontos figyelembe venni a gyenge egyedeket és azok azonosítását, hogy biztosítsuk az adatintegritást és az adatbázis szabályainak megfelelő működést.",-1);function Y(G,H){const e=n("Mermaid");return i(),k("div",null,[z,l(e,{id:"mermaid-99",code:"eJzT1dXlKsksyUm1UjDUUyg4vDInJZELJMiVWuSSmZhelJjLpaDgXFpckp+bWsQFAE9GDnE="}),d,m,u,b,l(e,{id:"mermaid-125",code:"eJzT1dXlKsksyUm1UjDSUyg4vDInJZELJMiVWuSSmZhelJjLpaDgX5SSWqRQU6Orm1+t4FxaXJKfC+RbKSgZ6un5KXEBANu4FIM="}),h,g,c,y,l(e,{id:"mermaid-146",code:"eJzT1dXlKsksyUm1UjDWUyg4vDInJZELJMiVWuSSmZhelJjLpaAQXFKakppXolBTo6tbU63gnF9aVJyqYKWg5Kun56fEBQDhKxS3"}),p,v,_,l(e,{id:"mermaid-160",code:"eJzT1dXlKsksyUm1UjDRUyg4vDInJZELJMiVWuSSmZhelJjLpaDgmluQk1+ZmqpQU6Orm1+tEJCRn5fqV5qblFqkYKWQkViMrKYayMnMK4ELeLooBHgDxYpLijLz0hX8EnNTgbxaIEY2BqYLSQymEU0YrBkAAn46KQ=="}),j,l(e,{id:"mermaid-189",code:"eJxLLXLJTEwvSszlUgCD0OLUIoWaGl3d/GqFgIz8vFS/0tyk1KJiBSuFjMRiZEXVUA5MwNNFwdMvBE3QLzE3VSHMMcjZwzEIKlULpVFMRzYMSQKrmRiCSBrQ7EKTDakswHQNAJkZQvc="}),A,E,S,f,D,l(e,{id:"mermaid-209",code:"eJxLLXLJTEwvSszlUgAD59Likvzc1CKFaqgAsqCni4KnXwiShF9ibqpCmGOQs4djEJJwcElRamoJFgnnzJJKLMJRmQXO+SnoJtVyAQA9OSXM"}),I,L,J,N,R,K,l(e,{id:"mermaid-232",code:"eJxLLXLJTEwvSszlUgADp/z8bIVqKAcm4Omi4OkXgiQYklmSk6oQ5hjk7OEYhCTuWFqSkV+EoryWC8qAyBWjGI5FPQj4Jeaim17LBQBYCSbm"}),U,q,C,x,F,l(e,{id:"mermaid-252",code:"eJxLLXLJTEwvSszlUgCD4JKi1NQShWooFyHk6aLg6ReCIeyXmJuqEOYY5OzhGASVrOWCMjzyS4tTUYwCi/iV5ialFqFpwmFRLRcA2TcnbQ=="}),T,O,M,Q,P,l(e,{id:"mermaid-272",code:"eJxLLXLJTEwvSszlUgAD/6KU1CKFaigPLuLpouDpF4Ik6lxaXJKfm1rkl5ibqhDmGOTs4RiErsklsSRVwcUxxBUqUYtsh09mXiqmPSBRDLuwuyCgKD+lNLkEhwMCSxPzSjJLKpE01XIBAHonOl4="}),X,l(e,{id:"mermaid-390",code:"eJxLLXLJTEwvSszlUgCC4JLSlNS8kmKFmhpd3fxqOD8+uDQpKzUZKGGloKSEqrQazIULeLooePqFoIr5JeamKoQ5Bjl7OAaBZWq5IGbATIWbARFANQMihsuMkNTE5IzUIoQZUAEUM6BiON2B4c3afF3dmhqEAzG8jaEU7g48SmFOxBZG2PyMzQ9IYkDXAwAUOH6k"}),B,V,w,Z,W])}const ta=o(r,[["render",Y],["__file","lesson2.html.vue"]]);export{ta as default};
