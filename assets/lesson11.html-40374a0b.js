import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,a as s}from"./app-56f1ebe4.js";const t="/assets/images/python/11/1.jpg",l="/assets/images/python/11/2.png",o="/assets/images/python/11/3.jpg",i="/assets/images/python/11/4.png",p="/assets/images/python/11/5.png",r="/assets/images/python/11/6.png",c="/assets/images/python/11/7.png",d="/assets/images/python/11/8.png",k={},u=s('<h1 id="_11-tananyag" tabindex="-1"><a class="header-anchor" href="#_11-tananyag" aria-hidden="true">#</a> 11. tananyag</h1><div class="hint-container tip"><p class="hint-container-title">üìö EBBEN A FEJEZETBEN</p><ul><li>Munka sz√∂veges √©s bin√°ris f√°jlokkal</li><li>F√°jlok megnyit√°sa, tartalm√°nak olvas√°sa √©s bez√°r√°sa</li><li>F√°jlok k√∂rbej√°r√°sa ciklussal</li><li>Bin√°ris f√°jlok olvas√°sa √©s m√°sol√°sa</li></ul></div><p>Nagyj√°b√≥l minden, amit a sz√°m√≠t√≥g√©p√©n t√°rolunk, legyen az dokumentum, program, film, f√©nyk√©p √©s √≠gy tov√°bb, egy f√°jlban van t√°rolva. A legt√∂bb f√°jl mapp√°kba (m√°s n√©ven k√∂nyvt√°rakba) van rendezve. A mapp√°k √©s f√°jlok k√∂z√∂tt a Finder (<em>Macen</em>) vagy a File Explorer (<em>Linux</em>) vagy a Windows Explorer (<em>Windowsban</em>) seg√≠ts√©g√©vel b√∂ng√©szhet√ºnk.<br> A Python sz√°mos eszk√∂zt k√≠n√°l a k√ºl√∂nb√∂z≈ë t√≠pus√∫ f√°jlok l√©trehoz√°s√°hoz, olvas√°s√°hoz √©s √≠r√°s√°hoz. Ebben a fejezetben a Python k√≥d f√°jlokkal val√≥ munk√°hoz sz√ºks√©ges legfontosabb k√©szs√©geket tanuljuk meg.</p><h2 id="a-szoveges-es-binaris-fajlok" tabindex="-1"><a class="header-anchor" href="#a-szoveges-es-binaris-fajlok" aria-hidden="true">#</a> A sz√∂veges √©s bin√°ris f√°jlok</h2><p>Alapvet≈ëen k√©tf√©le f√°jlt√≠pus l√©tezik:</p><ul><li><p><strong>Sz√∂veges f√°jl:</strong> Egyszer≈± sz√∂veges karaktereket tartalmaz. Ha egy sz√∂veges f√°jlt megnyitunk egy sz√∂vegszerkeszt≈ëben, akkor az ember √°ltal olvashat√≥ tartalmat jelen√≠t meg. A sz√∂veg nem biztos, hogy olyan nyelven van, amelyet ismer√ºnk vagy √©rt√ºnk, de t√∂bbnyire olyan norm√°l karaktereket l√°tunk, amelyeket b√°rmelyik billenty≈±zeten be√≠rhatunk.</p></li><li><p><strong>Bin√°ris f√°jl:</strong> B√°jtokban t√°rolja az inform√°ci√≥kat, amelyek nem annyira ember √°ltal olvashat√≥ak. Ha megnyitjuk a bin√°ris f√°jlt egy sz√∂vegszerkeszt≈ë programban, akkor a lenti √°br√°hoz hasonl√≥t l√°thatunk.</p></li></ul><figure><img src="'+t+'" alt="Bin√°ris f√°jl" tabindex="0" loading="lazy"><figcaption>Bin√°ris f√°jl</figcaption></figure><p>Ha megnyitunk egy bin√°ris f√°jlt egy sz√∂vegszerkeszt≈ëben, √©s ezt a zagyvas√°got l√°tjuk, ne essen p√°nikba. Csak z√°rjuk be a f√°jlt vagy a programot, √©s v√°lasszunk a Nemet, ha a ment√©sre k√©ri. A f√°jl rendben lesz, am√≠g nem szerekeszt√ºnk √©s ment√ºnk r√°.</p><p>A lenti √°bra k√ºl√∂nb√∂z≈ë sz√∂veges √©s bin√°ris f√°jlok p√©ld√°it sorolja fel, amelyek k√∂z√ºl n√©h√°nnyal tal√°n m√°r dolgozt√°l m√°r kor√°bban. M√°s f√°jlt√≠pusok is l√©teznek, ezek a legelterjedtebbek k√∂z√© tartoznak.</p><figure><img src="'+l+`" alt="F√°jlt√≠pusok" tabindex="0" loading="lazy"><figcaption>F√°jlt√≠pusok</figcaption></figure><p>Mint minden Python-k√≥d meg√≠r√°s√°hoz is haszn√°lhatunk VS Code-ot vagy szinte b√°rmilyen k√≥dszerkeszt≈ët. Ebben a fejezetben egyszer≈±en az√©rt haszn√°ljuk a VS Code-t, mert annak Explorer s√°vja (bal oldalon, amikor nyitva van) megjelen√≠ti annak a mapp√°nak a tartalm√°t, amelyben √©ppen dolgozol.</p><h2 id="fajlok-megnyitasa-es-lezarasa" tabindex="-1"><a class="header-anchor" href="#fajlok-megnyitasa-es-lezarasa" aria-hidden="true">#</a> F√°jlok megnyit√°sa √©s lez√°r√°sa</h2><p>Egy f√°jl Python alkalmaz√°sb√≥l t√∂rt√©n≈ë megnyit√°s√°hoz haszn√°ljuk a k√∂vetkez≈ë szintaxist:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span>ext<span class="token punctuation">[</span><span class="token punctuation">,</span>mode<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A <code>filename.ext</code> hely√©re √≠rjuk be a megnyitni k√≠v√°nt f√°jl nev√©t. Ha a f√°jl nem ugyanabban a k√∂nyvt√°rban van, mint a Python-k√≥d, akkor meg kell adnia a f√°jl el√©r√©si √∫tvonal√°t perjelekkel (<strong>/</strong>).</p><p>Ha p√©ld√°ul a <strong>foo.txt</strong> f√°jlt az asztalr√≥l szeretn√©nk megnyitni, √©s a felhaszn√°l√≥i fi√≥k neve Alan, akkor a <code>C:/Users/Alan/Desktop/foo.txt</code> el√©r√©si utat kell haszn√°lnunk, nem pedig a Windowsban megszokott, ford√≠tott t√∂rtvonalas (m√°s n√©ven <strong>Backslash</strong> vagy <strong>visszaper</strong>) szintaxist (<code>C:\\Users\\Alan\\Desktop\\foo.txt</code>).</p><p>A <strong>,mode</strong> opcion√°lis (<em>ezt a sz√∂gletes z√°r√≥jelek jelzik</em>).</p><div class="hint-container tip"><p class="hint-container-title">Haszn√°lhatjuk annak megad√°s√°ra, hogy milyen t√≠pus√∫ hozz√°f√©r√©st szeretn√©nk hozz√°rendelni az alkalmaz√°sunknak, a k√∂vetkez≈ë egykarakteres r√∂vid√≠t√©sekkel:</p><p><strong>r:</strong> (<em>Read</em>): Megnyitja a f√°jlt, de nem engedi a Python sz√°m√°ra, hogy v√°ltoztat√°sokat v√©gezzen. Ez az alap√©rtelmezett m√≥d, √©s akkor haszn√°latos, ha nem adjuk meg. Ha a f√°jl nem l√©tezik, a Python <strong>FileNotFoundError</strong> kiv√©telt dob.</p><p><strong>r+:</strong> (<em>Read/Write</em>): Megnyitja a f√°jlt, √©s lehet≈ëv√© teszi a Python sz√°m√°ra a f√°jl olvas√°s√°t √©s √≠r√°s√°t.</p><p><strong>a:</strong> (<em>Append</em>): Megnyitja a f√°jlt, √©s lehet≈ëv√© teszi a Python sz√°m√°ra, hogy √∫j tartalmat adjon hozz√° a f√°jl v√©g√©hez, de a megl√©v≈ë tartalmat nem v√°ltoztatja meg. Ha a f√°jl nem l√©tezik, ez a m√≥d <em>l√©trehozza</em> a f√°jlt.</p><p><strong>w:</strong> (<em>Write</em>): Megnyitja a f√°jlt, √©s lehet≈ëv√© teszi a Python sz√°m√°ra, hogy v√°ltoztat√°sokat v√©gezzen a f√°jlban. L√©trehozza a f√°jlt, ha az nem l√©tezik.</p><p><strong>x:</strong> (<em>Create</em>): L√©trehozza a f√°jlt, ha az m√©g nem l√©tezik. Ha a f√°jl m√°r l√©tezik, <strong>FileExistsError</strong> kiv√©telt dob.</p></div><p>Megadhatjuk a megnyitand√≥ vagy l√©trehozand√≥ f√°jl t√≠pus√°t is. Ha m√°r megadtuk az el≈ëz≈ë m√≥dok valamelyik√©t, csak adjuk hozz√° ezt a specifik√°ci√≥t egy √∫jabb bet≈±k√©nt.</p><div class="hint-container tip"><p class="hint-container-title">Ha csak az al√°bbi bet≈±k egyik√©t haszn√°ljuk √∂nmag√°ban, a f√°jl olvas√°si m√≥dban ny√≠lik meg:</p><p><strong>t:</strong> (<em>Sz√∂veg</em>): Sz√∂veges f√°jlk√©nt nyitja meg a f√°jlt, √©s lehet≈ëv√© teszi a Python sz√°m√°ra a sz√∂veg olvas√°s√°t √©s √≠r√°s√°t.</p><p><strong>b:</strong> (<em>Bin√°ris</em>): Megnyitja a f√°jlt bin√°ris f√°jlk√©nt, √©s lehet≈ëv√© teszi a Python sz√°m√°ra, hogy olvasson √©s √≠rjon b√°jtokat.</p></div><p>Az <code>open</code> met√≥dust alapvet≈ëen k√©tf√©lek√©ppen haszn√°lhatjuk. Az egyik szintaxissal hozz√°rendelsz egy v√°ltoz√≥ nevet a f√°jlhoz, √©s ezt a v√°ltoz√≥ nevet haszn√°lod a k√≥dban a f√°jlra val√≥ hivatkoz√°shoz:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>var <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span>ext<span class="token punctuation">[</span><span class="token punctuation">,</span>mode<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A <code>var</code>-t helyettes√≠ts√ºk egy tetsz≈ëleges n√©vvel (<em>b√°r a Pythonban gyakori, hogy a csak az <strong>f</strong> bet≈±t haszn√°ljuk a v√°ltoz√≥nevek√©nt</em>).</p><p>Miut√°n megnyitottuk a f√°jlt, t√∂bbf√©lek√©ppen is hozz√°f√©rhet√ºnk a tartalm√°hoz, ahogyan azt a fejezet k√©s≈ëbbi r√©sz√©ben t√°rgyaljuk. Egyel≈ëre egyszer≈±en √°tm√°solunk mindent, ami a f√°jlban van, egy <strong>filecontents</strong> nev≈± v√°ltoz√≥ba, majd ezt a tartalmat egy egyszer≈± <code>print()</code> f√ºggv√©ny seg√≠ts√©g√©vel megjelen√≠tj√ºk.</p><p>Teh√°t az <code>quotes.txt</code> f√°jl megnyit√°s√°hoz, √©s a teljes tartalm√°nak beolvas√°s√°hoz tov√°bb√° a k√©perny≈ën val√≥ megjelen√≠t√©s√©hez haszn√°ljuk ezt a k√≥dot:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span>
filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ezzel a m√≥dszerrel a f√°jl mindaddig nyitva marad, am√≠g be nem z√°rjuk azt a f√°jlv√°ltoz√≥ nev√©nek √©s a <code>.close()</code> met√≥dusnak a haszn√°lat√°val, p√©ld√°ul √≠gy:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Gy≈ëz≈ëdj√ºnk meg r√≥la, hogy alkalmaz√°sunk bez√°rj√°k azokat a f√°jlokat, amelyekre m√°r nincs sz√ºks√©g√ºnk. Ennek elmulaszt√°sa a nyitott f√°jlkezel≈ëk felhalmoz√≥d√°s√°hoz, ami v√©g√ºl az alkalmaz√°s kiv√©telek dob√°s√°hoz √©s √∂sszeoml√°s√°hoz vezethet, √©s tal√°n m√©g a nyitott f√°jlok egy r√©sz√©t is megrong√°lhatja ek√∂zben.</p><p>A f√°jl megnyit√°s√°nak m√°sodik m√≥dja a kontextuskezel≈ë. A kontextuskezel≈ë k√≥dol√°sa a <code>with</code> sz√≥val kezd≈ëdik. Hozz√°rendel egy v√°ltoz√≥ nevet, de ezt a sor v√©ge fel√© teszi. Az ezt k√∂vet≈ë √∂sszes beh√∫zott k√≥dr√≥l felt√©telezz√ºk, hogy a megnyitott f√°jl kontextus√°hoz tartozik (mint p√©ld√°ul a cikluson bel√ºl beh√∫zott k√≥d). A kontextuskezel≈ë k√≥dol√°s√°nak v√©g√©n nem kell lez√°rni a f√°jlt, mert a Python ezt automatikusan megteszi.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># ---------------- Contextual syntax </span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>

<span class="token comment"># The unindented line below is outside the with... block; </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;File is closed: &#39;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>closed<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√∂vetkez≈ë k√≥d egy alkalmaz√°st mutat be, amely megnyitja a <code>quotes.txt</code> f√°jlt, beolvassa √©s megjelen√≠ti a tartalm√°t, majd bez√°rja a f√°jlt. Az els≈ë m√≥dszerrel a <code>.close()</code>-ot kell haszn√°lnunk a f√°jl bez√°r√°s√°hoz. A m√°sodik m√≥dszerrel a f√°jl automatikusan bez√°r√≥dik, √≠gy nincs sz√ºks√©g a <code>.close()</code> parancsra:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># - Basic syntax to open, read, and display file contents. </span>
f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span>
filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
<span class="token comment"># Returns True if the file is closed, otherwise False.</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;File is closed: &#39;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>closed<span class="token punctuation">)</span>
<span class="token comment"># Closes the file.</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># Close the file. </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># Print a blank line.</span>

<span class="token comment"># ---------------- Contextual syntax </span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
<span class="token comment"># The unindented line below is outside the with... block</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;File is closed: &#39;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>closed<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az alkalmaz√°s kimenete a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.
Groucho Marx
The difference between stupidity and genius is that genius has its limits. 
Albert Einstein
We are all here on earth to help others; what on earth the others are here 
for,
I have no idea. W. H. Auden
Ending a sentence with a preposition is something up with which I will not 
put. Winston Churchill

File is closed:  False

I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.
Groucho Marx
The difference between stupidity and genius is that genius has its limits. 
Albert Einstein
We are all here on earth to help others; what on earth the others are here 
for,
I have no idea. W. H. Auden
Ending a sentence with a preposition is something up with which I will not 
put. Winston Churchill

File is closed:  True
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Nem tudom garant√°lni, hogy ezeket a h√≠res id√©zeteket val√≥ban a bemutatott szem√©lyek mondt√°k.</em> Az els≈ë kimenet v√©g√©n a <code>.closed</code> √©rt√©ke <code>False</code>, mert a <code>close()</code> f√°jl bez√°r√°sa el≈ëtt tesztelt√ºk. A m√°sodik kimenet v√©g√©n a <code>.closed</code> √©rt√©ke <code>True</code> a <code>.close()</code> v√©grehajt√°sa n√©lk√ºl, mert a <code>with:</code> sor alatt beh√∫zott k√≥d elhagy√°sa automatikusan bez√°rja a f√°jlt.</p><p>A fejezet h√°tral√©v≈ë r√©sz√©ben maradunk a kontextuskezel≈ë szintaxisn√°l, mert √°ltal√°ban ez az el≈ënyben r√©szes√≠tett √©s aj√°nlott szintaxis, amit el kell saj√°t√≠tani.</p><p>Az el≈ëz≈ë p√©lda j√≥l m≈±k√∂dik, mivel a <code>quotes.txt</code> egy egyszer≈± sz√∂vegf√°jl, amely csak <strong>ASCII</strong> karaktereket tartalmaz - <em>olyan bet≈±ket, sz√°mokat √©s √≠r√°sjeleket, amelyeket az angol nyelv szabv√°nyos billenty≈±zet√©r≈ël be lehet √≠rni</em>. Most n√©zz√ºk meg a k√∂vetkez≈ë k√≥dot, amely egy <strong>.jpg</strong> f√°jlt pr√≥b√°l megnyitni, ami egy grafikus k√©p, nem pedig sz√∂veges f√°jl:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;happy_pickle.jpg&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√≥d futtat√°s√°nak k√≠s√©rlete a k√∂vetkez≈ë hib√°t eredm√©nyezi:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>UnicodeDecodeError: &#39;charmap&#39; codec can&#39;t decode byte 0x90 in position 40: character maps to &lt;undefined&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ez az √ºzenet nem a leghasznosabb. Tegy√ºk fel, hogy megpr√≥b√°ljuk megnyitni a <code>names.txt</code> f√°jlt, amely (felt√©telezhet≈ëen) egy olyan sz√∂veges f√°jl, mint az <code>quotes.txt</code>, ezzel a k√≥ddal:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;names.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ezut√°n futtatjuk ezt a k√≥dot, √©s ism√©t egy furcsa hiba√ºzenetet kapunk, a k√∂vetkez≈ët:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>UnicodeDecodeError: &#39;charmap&#39; codec can&#39;t decode byte 0x81 in position 45: character maps to &lt;undefined&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Mi a fene folyik itt?</strong></p><p>Az els≈ë probl√©m√°t az okozza, hogy a f√°jl t√≠pusa <code>.jpg</code>, azaz grafikus k√©p, ami azt jelenti, hogy a f√°jl bin√°ris f√°jl, nem pedig sz√∂veges. A <code>.jpg</code> f√°jl megnyit√°s√°hoz sz√ºks√©ges m√≥d a <code>b</code>. Vagy haszn√°ld az <code>rb</code>-t, ami azt jelenti, hogy <strong>read binary</strong>, p√©ld√°ul √≠gy:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;happy_pickle.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    filecontents <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>filecontents<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√≥d futtat√°sa nem gener√°l hib√°t. De amit megjelen√≠t, az egy√°ltal√°n nem hasonl√≠t a t√©nyleges k√©pre:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>b&#39;\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x01\\x00\\x00H\\x00H\\x00\\x00\\xff\\xe1\\x00X
Exif\\x00\\x00MM\\x00*\\x00\\x00\\x00\\x08\\x00\\x02\\x01\\x12\\x00\\x03\\x00\\x00\\x00\\x01\\x00
\\x01\\x00\\x00\\x87i\\x00\\x04\\x00\\x00\\x00\\x01\\x00\\x00\\x00&amp;\\x00\\x00\\x00\\x00\\x00\\x03
\\xa0\\x01\\x00\\x03\\x00\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xa0\\x02\\x00\\x04\\x00\\x00\\x00\\x01
\\x00\\x00\\x02\\xbc\\xa0\\x03\\x00\\x04\\x00\\x00\\x00\\x01\\x00\\x00\\x03\\xa5\\x00\\x00\\x00\\x00
\\xff\\xed\\x008Photoshop 3.0
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha megnyitjuk a <code>happy_pickle.jpg</code> f√°jlt egy <strong>grafikus alkalmaz√°sban</strong> vagy a <strong>VS Code</strong>-ban, nem √∫gy n√©z ki, mint ez a halandzsa. Ehelyett √∫gy n√©z ki, mint az lenti √°br√°n.</p><figure><img src="`+o+'" alt="happy_pickle.jpg" tabindex="0" loading="lazy"><figcaption>happy_pickle.jpg</figcaption></figure><p><em>√çgy kellene kin√©znie a happy_pickle.jpg k√©pnek.</em></p><figure><img src="'+i+'" alt="names.txt" tabindex="0" loading="lazy"><figcaption>names.txt</figcaption></figure><p><em>A names.txt f√°jl sz√∂veg, de nem sok angol karakterrel.</em></p><p>Akkor mi√©rt n√©z ki a f√°jl ilyen kusz√°n a Pythonban? A <code>print()</code> f√ºggv√©ny megjelen√≠ti a nyers b√°jtokat, amelyek a f√°jlt alkotj√°k. A nyers b√°jtok megjelen√≠t√©se nem gond vagy probl√©ma, csak jelenleg nem j√≥ m√≥dja a .jpg f√°jlok kezel√©s√©re.</p><p>A <code>names.txt</code> f√°jllal m√°s a probl√©ma. Ez a f√°jl egy sz√∂veges f√°jl <em>(.txt)</em>, ak√°rcsak az <code>quotes.txt</code>. De ha megnyitjuk, √©s megn√©zz√ºk a tartalm√°t, mint ahogy azt a lenti √°br√°n l√°thatjuk, sok olyan szokatlan karaktert tartalmaz, amelyeket √°ltal√°ban nem l√°tunk az ASCII-ban (<em>a billenty≈±zeten l√©v≈ë sz√°mok, bet≈±k √©s √≠r√°sjelek</em>).</p><figure><img src="'+p+`" alt="Python *.txt f√°jl beolvas√°sa" tabindex="0" loading="lazy"><figcaption>Python *.txt f√°jl beolvas√°sa</figcaption></figure><p><em>A names.txt megjelen√≠tve</em>.</p><p>Egy f√°jl megnyit√°sakor h√°rom dologra kell figyeln√ºnk:</p><ul><li>Egy sima sz√∂vegf√°jl (ASCII) eset√©ben az <code>r</code> m√≥dot haszn√°lhatjuk.</li><li>Bin√°ris f√°jl eset√©n a <code>b</code>-t kell megadni a m√≥dban.</li><li>Egy k√ºl√∂nleges karaktereket tartalmaz√≥ sz√∂veges f√°jlt az <code>open()</code> utas√≠t√°sban az <code>utf-8</code> k√≥dol√°sra kell √°ll√≠tani.</li></ul><div class="hint-container tip"><p class="hint-container-title">MI AZ UTF-8?</p><p>Az <strong>UTF-8 a Unicode Transformation Format</strong>, 8 bites r√∂vid√≠t√©se, √©s a bet≈±k √©s sz√°mok sz√°m√≠t√≥g√©pes √°br√°zol√°s√°nak szabv√°nyos√≠tott m√≥dja. Az eredeti ASCII karakterk√©szlet, amely f≈ëk√©nt kis- √©s nagybet≈±ket, sz√°mokat √©s √≠r√°sjeleket tartalmaz, a sz√°m√≠t√°stechnika kezdeti id≈ëszak√°ban j√≥l m≈±k√∂d√∂tt. Amikor azonban m√°s nyelvek is beker√ºltek a rendszerbe, ezek a karakterek m√°r nem voltak elegend≈ëek. Az √©vek sor√°n sz√°mos szabv√°nyt javasoltak √©s fogadtak el m√°s nyelvek kezel√©s√©re. Ezek k√∂z√ºl az <strong>UTF-8</strong> haszn√°lata folyamatosan n≈ëtt, m√≠g a legt√∂bb m√°s√© cs√∂kkent. Ma az <strong>UTF-8</strong> nagyj√°b√≥l minden internetes dologban a szabv√°ny, ez√©rt j√≥ v√°laszt√°s, ha egy projekthez karakterk√©szletet kell v√°lasztani.</p><p>Ha elakadsz egy olyan f√°jl megnyit√°sakor, amelynek <strong>UTF-8</strong> k√≥dol√°s√∫nak kellene lennie, de nem m≈±k√∂dik egy√ºtt, keress r√° a weben a <em>convert file to utf-8 encoding</em> kifejez√©sre. Ezut√°n keressen egy weboldalt vagy alkalmaz√°st, amely az oper√°ci√≥s rendszerrel egy√ºttm≈±k√∂dve elv√©gzi az √°talak√≠t√°st.</p></div><h2 id="fajlok-tartalmanak-olvasasa" tabindex="-1"><a class="header-anchor" href="#fajlok-tartalmanak-olvasasa" aria-hidden="true">#</a> F√°jlok tartalm√°nak olvas√°sa</h2><p>Ebben a fejezetben m√°r kor√°bban l√°thattad, hogyan haszn√°lhatod a <code>.read()</code> parancsot egy megnyitott f√°jl tartalm√°nak beolvas√°s√°ra. De nem ez az egyetlen m√≥dja egy f√°jl beolvas√°s√°nak.</p><div class="hint-container warning"><p class="hint-container-title">H√°rom lehet≈ës√©ged van:</p><p><code>read([size])</code>: A teljes f√°jl beolvas√°sa, ha a z√°r√≥jeleket √ºresen hagyjuk. Ha a z√°r√≥jelben megadunk egy m√©retet, akkor annyi karaktert (sz√∂veges f√°jl eset√©n) vagy b√°jtot (bin√°ris f√°jl eset√©n) olvas be.</p><p><code>readline()</code>: Egy sor tartalm√°t olvassa be egy sz√∂veges f√°jlb√≥l - a sor ott √©r v√©get, ahol egy √∫jsor karakter van.<br> (Az √∫jsor karakter, <code>\\n</code>, befejezi a megjelen√≠tett sort, √©s a kurzort a k√∂vetkez≈ë sorba mozgatja).</p><p><code>readlines()</code>: Egy sz√∂vegf√°jl √∂sszes sor√°t beolvassa egy list√°ba.</p></div><p>Az emberek nem √≠rnak bin√°ris f√°jlokat, √≠gy a bin√°ris f√°jlban l√©v≈ë √∫jsor karakterek v√©letlenszer≈±ek. Ez√©rt a <code>readline()</code> √©s a <code>readlines()</code> csak sz√∂veges f√°jlok eset√©n hasznos.</p><p>Mind a <code>read()</code>, mind a <code>readline()</code> met√≥dus egyszerre olvassa be a teljes f√°jlt. Az egyetlen k√ºl√∂nbs√©g az, hogy a <code>read</code> egyetlen nagy adatdarabk√©nt olvassa be a f√°jlt, m√≠g a <code>readlines()</code> soronk√©nt olvassa be a f√°jlt, √©s minden sort egy lista elemek√©nt t√°rol. P√©ld√°ul a k√∂vetkez≈ë k√≥d megnyitja a <code>quotes.txt</code> f√°jlt, beolvassa a teljes tartalm√°t, majd megjelen√≠ti azt.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> 
    <span class="token comment"># Read in entire file</span>
    content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A <code>content</code> v√°ltoz√≥ a sz√∂veges f√°jlb√≥l sz√°rmaz√≥ √∂sszes adat m√°solat√°t t√°rolja. A v√°ltoz√≥t ki√≠rjuk, hogy megjelen√≠ts√ºk a tartalm√°t. A f√°jl minden sor√°nak v√©g√©n l√©v≈ë √∫jsor karakter a ki√≠r√°skkor √∫j sort ind√≠t a k√©perny≈ën.</p><p>Itt van ugyanez a k√≥d readlines() haszn√°lat√°val read helyett:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    content <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√≥d kimenete a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>[&quot;I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.\\n&quot;, &#39;Groucho Marx\\n&#39;, &#39;The difference between stupidity and genius is that genius has its limits. \\n&#39;, &#39;Albert Einstein\\n&#39;, &#39;We are all here on earth to help others; what on earth the others are here \\n&#39;, &#39;for,\\n&#39;, &#39;I have no idea. W. H. Auden\\n&#39;, &#39;Ending a sentence with a preposition is something up with which I will not \\n&#39;, &#39;put. Winston Churchill\\n&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A kimenetet k√∂r√ºlvev≈ë sz√∂gletes z√°r√≥jelek jelzik, hogy ez egy lista. A lista minden egyes elem√©t id√©z≈ëjelek veszik k√∂r√ºl √©s vessz≈ëkkel v√°lasztj√°k el. Az egyes elemek v√©g√©n l√©v≈ë <code>\\n</code> az √∫jsor karakter, amely a f√°jl sor√°t z√°rja.</p><p>A <code>readlines()</code> (t√∂bbes sz√°m) funkci√≥val ellent√©tben a <code>readline()</code> csak egy sort olvas be a f√°jlb√≥l. A sor a f√°jl aktu√°lis poz√≠ci√≥j√°t√≥l a k√∂vetkez≈ë √∫jsor karakterig tart. Egy √∫jabb <code>readline()</code> v√©grehajt√°sa a f√°jl k√∂vetkez≈ë sor√°t olvassa be, √©s √≠gy tov√°bb. Tegy√ºk fel, hogy p√©ld√°ul ezt a k√≥dot futtatjuk:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    content <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A kimenet a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ha ezt k√∂vet≈ëen egy √∫jabb <code>readline()</code> parancsot hajtunk v√©gre, akkor a k√∂vetkez≈ë sort olvassuk be. Mint sejtheted, amikor a <code>readline()</code> √©s <code>readlines()</code> f√ºggv√©nyekr≈ël van sz√≥, val√≥sz√≠n≈±leg ciklusokat akarsz haszn√°lni, hogy az √∂sszes adathoz √∫gy f√©rj hozz√°, hogy nagyobb kontrollt biztos√≠tson sz√°modra.</p><h2 id="fajlok-korbejararsa" tabindex="-1"><a class="header-anchor" href="#fajlok-korbejararsa" aria-hidden="true">#</a> F√°jlok k√∂rbej√°r√°rsa</h2><p>A <code>readlines()</code> vagy a <code>readline()</code> seg√≠ts√©g√©vel v√©gighaladhatunk egy f√°jlon. A <code>readlines()</code> met√≥dus mindig az eg√©sz f√°jlt olvassa be. √çgy ha a f√°jl nagyon nagy, a sz√°m√≠t√≥g√©pen elfogyhat a mem√≥ria (RAM), miel≈ëtt a f√°jl beolvas√°sa befejez≈ëdne.</p><p>Ha azonban ismerj√ºk a f√°jl m√©ret√©t, √©s az viszonylag kicsi (<em>tal√°n n√©h√°ny sz√°z sornyi vagy ann√°l kevesebb adat</em>), <code>readlines()</code> a leggyorsabb m√≥dja az √∂sszes adat beolvas√°s√°nak. Ezek az adatok egy list√°ban lesznek, √≠gy a f√°jl helyett a list√°n fogunk v√©gighaladni. A bin√°ris f√°jlokon is v√©gighaladhatunk, de ezekben nincsenek olyan sz√∂veges sorok, mint a sz√∂veges f√°jlokban.<br> A bin√°ris f√°jlokat teh√°t darabokban olvassa be.</p><h3 id="ciklus-es-readlines-hasznalata" tabindex="-1"><a class="header-anchor" href="#ciklus-es-readlines-hasznalata" aria-hidden="true">#</a> Ciklus √©s <code>readlines()</code> haszn√°lata</h3><p>Amikor a <code>readlines()</code> funkci√≥val olvasunk be egy f√°jlt, akkor a teljes f√°jlt egy csap√°sra beolvashatjuk egy listak√©nt. Teh√°t nem igaz√°n ciklusszer≈±en√≥ megy√ºnk v√©gig a f√°jlon. Ink√°bb a <code>readlines()</code> √°ltal a mem√≥ri√°ban t√°rolt elemek list√°j√°n megy√ºnk v√©gig. Az ehhez sz√ºks√©ges k√≥d √≠gy n√©z ki:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Reads in all lines first, then loops through. </span>
    <span class="token keyword">for</span> one_line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha ezt a k√≥dot futtatjuk, a kimenet dupla sork√∂zzel fog megjelenni, mivel minden egyes listaelem √∫jsorral v√©gz≈ëdik, √©s a <code>print</code> mindig hozz√°adja a saj√°t √∫jsor√°t a ciklus minden egyes lefut√°sakor. Ha meg akarjuk tartani az egyszer≈± sork√∂z√∂ket, akkor a <code>print</code> utas√≠t√°shoz adjuk hozz√° at <code>end=&#39;&#39;</code>-t (<em>√ºgyelj√ºnk arra, hogy k√©t szimpla vagy dupla id√©z≈ëjelet haszn√°ljunk, sz√≥k√∂z n√©lk√ºl az = ut√°n</em>). √çme egy p√©lda:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Reads in all lines first, then loops through. </span>
    <span class="token keyword">for</span> one_line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ennek a k√≥dnak a kimenete a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.
Groucho Marx
The difference between stupidity and genius is that genius has its limits. 
Albert Einstein
We are all here on earth to help others; what on earth the others are here 
for,
I have no idea. W. H. Auden
Ending a sentence with a preposition is something up with which I will not 
put. Winston Churchill
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tegy√ºk fel, hogy el√©gedettek vagyunk ezzel a kimenettel, de szeretn√©nk az√©rt egy kicsit jav√≠tani rajta. Az egyes id√©zetek alatti nevet n√©h√°ny sz√≥k√∂zzel beljebbh√∫zva, √©s a n√©v al√° egy √ºres sort rakva. Hogyan tudn√°nk ezt megtenni?</p><p>Nos, a Pythonban van egy be√©p√≠tett <code>enumerate()</code> f√ºggv√©ny, amely egy list√°val haszn√°lva a cikluson val√≥ √°thalad√°sok sz√°m√°t sz√°molja, 0-t√≥l kezdve.</p><p>Teh√°t az el≈ëz≈ë p√©ld√°ban l√°that√≥ <code>for:</code> ciklus helyett azt √≠rjuk, hogy <code>for one_line in enumerate(f.readlines()):</code>.</p><p>A ciklus minden egyes √°tfut√°sakor a <code>one_line[0]</code> tartalmazza az adott sor sz√°m√°t, a <code>one_line[1]</code> tartalmazza a tartalm√°t (<em>a sor sz√∂veg√©t</em>), √©s a <strong>modulo</strong> oper√°tor (<code>%</code>) seg√≠ts√©g√©vel, amely az oszt√°s ut√°ni marad√©kot adja vissza, megn√©zhetj√ºk, hogy a sz√°ml√°l√≥ p√°ros sz√°m-e. A <strong>modulo</strong> oper√°tor a marad√©kot adja vissza.</p><p>Teh√°t ha egy p√°ros sz√°mra kisz√°molod a <code>% 2</code>-t (<em>modulo 2</em>), mindig <strong>0</strong>-t kapsz. Egy p√°ratlan sz√°m mindig null√°t√≥l k√ºl√∂nb√∂z≈ë marad√©kot fog visszaadni, ha osztod 2-vel. Teh√°t a k√≥dot √≠gy √≠rhatod meg:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Reads in all lines first, then loops through. </span>
    <span class="token comment"># Count each line starting at zero.</span>
    <span class="token keyword">for</span> one_line <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># If counter is even number, print with no extra newline </span>
        <span class="token keyword">if</span> one_line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># Otherwise print a couple spaces and an extra newline. </span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span> <span class="token operator">+</span> one_line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A kimenet a k√∂vetkez≈ë:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>I&#39;ve had a perfectly wonderful evening, but this wasn&#39;t it.
 Groucho Marx

The difference between stupidity and genius is that genius has its limits. 
 Albert Einstein

We are all here on earth to help others; what on earth the others are here for, I have no idea.
 W. H. Auden

Ending a sentence with a preposition is something up with which I will not put. 
 Winston Churchill
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ciklus-es-readline-hasznalata" tabindex="-1"><a class="header-anchor" href="#ciklus-es-readline-hasznalata" aria-hidden="true">#</a> Ciklus √©s <code>readline()</code> haszn√°lata</h3><p>Ha nem vagy biztos az olvasand√≥ f√°jl m√©ret√©t vagy az alkalmaz√°sodat futtat√≥ sz√°m√≠t√≥g√©p RAM-j√°nak mennyis√©g√©t illet≈ëen, a <code>readlines()</code> haszn√°lata egy teljes f√°jl beolvas√°s√°ra kock√°zatos lehet. Ha nincs el√©g mem√≥ria a teljes f√°jl t√°rol√°s√°ra, az alkalmaz√°s √∂sszeomlik, amikor elfogy a mem√≥ria. Ha biztosra akarunk menni, akkor a f√°jlon soronk√©nt v√©gighaladunk, √≠gy a f√°jl tartalm√°nak mindig csak egy sora van a mem√≥ri√°ban.<br> Ehhez a m√≥dszerhez nyissuk meg a f√°jlt, olvassunk be egy sort, √©s tegy√ºk egy v√°ltoz√≥ba. Ezut√°n v√©gighaladunk a f√°jlon, addig am√≠g a v√°ltoz√≥ nem √ºres. Mivel a f√°jl minden egyes sora tartalmaz valamilyen sz√∂veget, a v√°ltoz√≥ nem lesz √ºres, am√≠g az utols√≥ sor beolvas√°sa meg nem t√∂rt√©nik. √çme a k√≥d a ilyen megk√∂zel√≠t√©s√©hez:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> 
    one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token keyword">while</span> one_line<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> 
        one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nagyobb f√°jlok eset√©n ez a m√≥dszer a legjobb megold√°s, mivel nem olvassa be a teljes f√°jlt. Az egyetlen lehets√©ges probl√©ma az, ha elfelejtj√ºk a <code>.readline()</code> funkci√≥t a cikluson bel√ºl, hogy a k√∂vetkez≈ë sorra l√©pj√ºnk. Ellenkez≈ë esetben v√©gtelen ciklusba ker√ºl√ºnk, amely √∫jra √©s √∫jra ki√≠rja az els≈ë sort. Ha valaha is ilyen helyzetben tal√°ljuk magunkat, akkor nyomjuk le a <code>Ctrl+C</code> billenty≈±kombin√°ci√≥t a termin√°lablakban, ahol a k√≥d fut, a ciklus le√°ll√≠t√°s√°hoz.</p><p>Ugyanezt a form√°tumot a <code>.readline()</code> haszn√°lat√°val el√©rhetj√ºk a Pythonban. A k√≥dunkban ind√≠tsunk egy sz√°ml√°l√≥t 1-el. Hozzunk l√©tre egy ciklust, amely egyszerre egy sort olvas be a sz√∂vegf√°jlb√≥l. A cikluson bel√ºl n√∂velj√ºk a sz√°ml√°l√≥ v√°ltoz√≥j√°t 1-gyel minden egyes ciklus fut√°skor. Ezut√°n a p√°ros sorokn√°l tagoljuk be √©s tegy√ºnk egy plusz sz√≥k√∂zt a k√∂vetkez≈ëk√©ppen:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Store a number to use as a loop counter. </span>
counter <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment"># Open the file.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;quotes.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token comment"># Read one line from the file.</span>
    one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># As long as there are lines to read... </span>
    <span class="token keyword">while</span> one_line<span class="token punctuation">:</span>
        <span class="token comment"># If the counter is an even number, print a couple spaces. </span>
        <span class="token keyword">if</span> counter <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span> <span class="token operator">+</span> one_line<span class="token punctuation">)</span>
        <span class="token comment"># Otherwise print with no newline at the end. </span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> 
        <span class="token comment"># Increment the counter </span>
        counter <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token comment"># Read the next line.</span>
        one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hozzafuzes-vs-feluliras" tabindex="-1"><a class="header-anchor" href="#hozzafuzes-vs-feluliras" aria-hidden="true">#</a> Hozz√°f≈±z√©s vs fel√ºl√≠r√°s</h3><p>B√°rmikor, amikor f√°jlokkal dolgozunk, fontos, hogy meg√©rts√ºk a k√ºl√∂nbs√©get a <strong>write</strong> √©s az <strong>append</strong> k√∂z√∂tt. Ha egy f√°jl inform√°ci√≥t tartalmaz, √©s <strong>write</strong> m√≥dban nyitjuk meg, majd tov√°bbi inform√°ci√≥kat √≠runk bele, akkor az √∫j tartalom fel√ºl√≠rja a f√°jlban m√°r megl√©v≈ë tartalmakat. Erre nincs visszavon√°s. Ha teh√°t a f√°jl tartalma fontos, akkor biztosra kell menn√ºnk, hogy nem k√∂vetj√ºk el ezt a hib√°t. Ha tartalmat szeretn√©nk hozz√°adni egy f√°jl v√©g√©hez, nyissuk meg a f√°jlt <strong>append</strong> (<code>a</code>) m√≥dban, majd a <code>.write</code> paranccsal √≠rjunk a f√°jlba.</p><p>Tegy√ºk fel, hogy a <em>Pe√±a Calder√≥n</em> nevet szeretn√©nk hozz√°adni a <code>names.txt</code> f√°jlhoz. Ez a n√©v, valamint a f√°jlban m√°r szerepl≈ë nevek az angol √°b√©c√©n k√≠v√ºli speci√°lis karaktereket haszn√°lnak, ez√©rt a k√≥dol√°st <strong>UTF-8</strong>-ra kell √°ll√≠tani. Tov√°bb√°, ha a f√°jlban szerepl≈ë minden egyes nevet k√ºl√∂n sorban szeretn√©nk megjelen√≠teni, akkor a hozz√°adand√≥ n√©v v√©g√©re egy <code>\\n</code> (√∫jsor) ker√ºlj√∂n. A k√≥dodnak √≠gy kell kin√©znie:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># New name to add with \\n to mark end of line. </span>
new_name <span class="token operator">=</span> <span class="token string">&#39;PenÃÉa CalderoÃÅn\\n&#39;</span>
<span class="token comment"># Open names.txt in append mode with encoding.</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;names.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Hogy ellen≈ërizz√ºk, hogy m≈±k√∂d√∂tt-e, ind√≠tsunk el egy √∫j k√≥dblokkot, beh√∫z√°sok n√©lk√ºl, √≠gy a <code>names.txt</code> f√°jl automatikusan bez√°r√≥dik. Ezut√°n nyissuk meg a f√°jlt olvas√°si (<code>r</code>) m√≥dban, √©s tekints√ºk meg a tartalm√°t. A lenti √°bra mutatja az √∫j n√©v hozz√°ad√°s√°ra szolg√°l√≥ k√≥dot, valamint a <code>names.txt</code> f√°jl megjelen√≠t√©s√©re szolg√°l√≥ k√≥dot a n√©v hozz√°ad√°sa ut√°n.</p><figure><img src="`+r+`" alt="√öj sz√∂veg hozz√°f≈±z√©se." tabindex="0" loading="lazy"><figcaption>√öj sz√∂veg hozz√°f≈±z√©se.</figcaption></figure><p><em>Egy √∫j n√©v a names.txt f√°jl v√©g√©hez csatolva.</em></p><h3 id="a-tell-hasznalata-a-pointer-mutato-helyenek-meghatarozasahoz" tabindex="-1"><a class="header-anchor" href="#a-tell-hasznalata-a-pointer-mutato-helyenek-meghatarozasahoz" aria-hidden="true">#</a> A tell() haszn√°lata a pointer (mutat√≥) hely√©nek meghat√°roz√°s√°hoz</h3><p>Amikor egy f√°jlon v√©gighaladunk, a tartalm√°t fentr≈ël lefel√© √©s balr√≥l jobbra olvassuk. A Python egy pointert (<em>mutat√≥t</em>) tart fenn, hogy nyomon k√∂vesse, hol tart a f√°jlban. Amikor egy sz√∂veges f√°jlt olvasol a <code>readline()</code> paranccsal, a pointer (<em>mutat√≥</em>) mindig a k√∂vetkez≈ë sor karakterpoz√≠ci√≥ja a f√°jlban.</p><p>Ha eddig csak megnyitottad a f√°jlt, akkor a karakterpoz√≠ci√≥ <strong>0</strong>, a f√°jl eleje lesz. A <code>readline()</code> minden egyes v√©grehajt√°sakor a pointer (<em>mutat√≥</em>) a k√∂vetkez≈ë sor elej√©re l√©p. √çme n√©h√°ny k√≥d √©s annak kimenete a szeml√©ltet√©s √©rdek√©ben:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;names.txt&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> 
    <span class="token comment"># Read first line to get started. </span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Keep reading one line at a time until there are no more. </span>
    <span class="token keyword">while</span> one_line<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
        one_line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0
BjoÃàrk Gu√∞mundsdoÃÅttir 25 
ÊØõÊ≥Ω‰∏ú 36
–ëop–∏c H–∏–∫o–ªae–≤–∏—á E–ª—å—Ü–∏–Ω 82 
Nguy√™ÃÉn T√¢ÃÅn DuÃÉng 104
PenÃÉa CalderoÃÅn 121
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az els≈ë <strong>0</strong> a pointer poz√≠ci√≥ja k√∂zvetlen√ºl a f√°jl megnyit√°sa ut√°n. A k√∂vetkez≈ë sor v√©g√©n l√©v≈ë <strong>25</strong> a pointer poz√≠ci√≥ja az els≈ë sor beolvas√°sa ut√°n. A <strong>36</strong> a k√∂vetkez≈ë sor v√©g√©n a pointer poz√≠ci√≥ja a m√°sodik sor v√©g√©n, √©s √≠gy tov√°bb, eg√©szen a <strong>121</strong>-ig a v√©g√©n, amikor a pointer a f√°jl v√©g√©n van.</p><p>Ha ezt a <code>readlines()</code> paranccsal pr√≥b√°lod megtenni, m√°s eredm√©nyt kapsz. √çme a k√≥d:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;names.txt&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># Reads in all lines first, then loops through. </span>
    <span class="token keyword">for</span> one_line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>one_line<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>√çme a kimenet:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0
BjoÃàrk Gu√∞mundsdoÃÅttir 121 
ÊØõÊ≥Ω‰∏ú 121
–ëop–∏c H–∏–∫o–ªae–≤–∏—á E–ª—å—Ü–∏–Ω 121 
Nguy√™ÃÉn T√¢ÃÅn DuÃÉng 121
PenÃÉa CalderoÃÅn 121
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A mutat√≥ a <strong>0.</strong> poz√≠ci√≥ban kezd≈ëdik, ahogyan az v√°rhat√≥ volt. De minden sor v√©g√©n <strong>121</strong>-et mutat, mert a <code>readlines()</code> a teljes f√°jlt beolvassa, amikor v√©grehajtja, √©s a mutat√≥t a v√©g√©n, a <strong>121</strong>-es poz√≠ci√≥ban hagyja. A ciklus val√≥j√°ban a f√°jl mem√≥ri√°ban l√©v≈ë m√°solat√°n fut v√©gig, m√°r nem olvassa v√©gig a f√°jlt.</p><h3 id="a-mutato-mozgatasa-seek-segitsegevel" tabindex="-1"><a class="header-anchor" href="#a-mutato-mozgatasa-seek-segitsegevel" aria-hidden="true">#</a> A mutat√≥ mozgat√°sa seek() seg√≠ts√©g√©vel</h3><p>M√≠g a <code>tell()</code> met√≥dus megmondja, hogy hol van a pointer egy k√ºls≈ë f√°jlban, a <code>seek()</code> met√≥dus lehet≈ëv√© teszi a mutat√≥ √∫jrapoz√≠cion√°l√°s√°t. A szintaxis a k√∂vetkez≈ë</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span>position<span class="token punctuation">[</span><span class="token punctuation">,</span>whence<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A <code>file</code>-t helyettes√≠ts√ºk a megnyitott f√°jl v√°ltoz√≥ nev√©vel. Helyettes√≠ts√ºk <code>position</code>, hogy megadjuk, hova szeretn√©nk helyezni a pointert. P√©ld√°ul a <code>0</code> a f√°jl elej√©re viszi vissza. A <code>whence</code> opcion√°lis, haszn√°lhatjuk annak megad√°s√°ra, hogy a f√°jlban hova √°ll√≠tsa be a mutat√≥ poz√≠ci√≥j√°t. A k√∂vetkez≈ë lehet≈ës√©gek k√∂z√ºl v√°laszthatunk:</p><ul><li>0: A f√°jl elej√©hez viszony√≠tott poz√≠ci√≥ be√°ll√≠t√°sa.</li><li>1: A poz√≠ci√≥t a pointer aktu√°lis poz√≠ci√≥j√°hoz k√©pest √°ll√≠tja be.</li><li>2: A f√°jl v√©g√©hez viszony√≠tott poz√≠ci√≥ be√°ll√≠t√°sa. A poz√≠ci√≥hoz negat√≠v sz√°mot haszn√°ljon.</li></ul><p>Ha kihagyjuk a <code>whence</code> √©rt√©ket, az alap√©rtelmezett √©rt√©k 0 lesz.</p><p>A <em>seek</em> a leggyakorabban haszn√°lt a pointer vissza√°ll√≠t√°s√°ra a a f√°jl √∫jb√≥li k√∂rbej√°r√°s√°hoz. Ennek szintaxisa egyszer≈±en <code>.seek(0)</code>.</p><h2 id="binaris-fajlok-olvasasa-es-masolasa" tabindex="-1"><a class="header-anchor" href="#binaris-fajlok-olvasasa-es-masolasa" aria-hidden="true">#</a> Bin√°ris f√°jlok olvas√°sa √©s m√°sol√°sa</h2><p>Tegy√ºk fel, hogy van egy alkalmaz√°sunk, amely megv√°ltoztat egy bin√°ris f√°jlt, √©s a biztons√°g kedv√©√©rt mindig az eredeti f√°jl m√°solat√°val akarunk dolgozni. A bin√°ris f√°jlok hatalmasak lehetnek, ez√©rt ahelyett, hogy egyszerre nyitn√°nk meg az eg√©szet, √©s kock√°ztatn√°nk, hogy kifogyunk a mem√≥ri√°b√≥l, darabokban olvashatjuk √©s darabokban √≠rhatjuk ki. A bin√°ris f√°jloknak nincs ember √°ltal olvashat√≥ tartalmuk. Sz√∂vegsorok sincsenek benn√ºk. Ez√©rt a <code>readline()</code> √©s a <code>readlines()</code> nem j√≥ v√°laszt√°s a bin√°ris f√°jlok √°tfut√°s√°ra, de haszn√°lhatod a <code>.read()</code> funkci√≥t megadott <strong>m√©rettel</strong>.</p><p>A lenti √°bra a <code>binarycopy.py</code> f√°jlt mutatja, amely m√°solatot k√©sz√≠t b√°rmely bin√°ris f√°jlr√≥l. L√©p√©sr≈ël l√©p√©sre v√©gigvezetj√ºk ezt a k√≥dot, hogy meg√©rts√ºk, hogyan m≈±k√∂dik.</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption><code>binarycopy.py</code></figcaption></figure><p><em>A <code>binarycopy.py</code> f√°jl b√°rmilyen bin√°ris f√°jlt m√°sol.</em></p><p>Az els≈ë l√©p√©s a m√°solni k√≠v√°nt f√°jl megad√°sa. Mi a <code>happy_pickle.jpg</code> f√°jlt v√°lasztottuk, amely, mint az √°br√°n l√°that√≥, ugyanabban a mapp√°ban van, mint a <code>binarycopy.py</code> f√°jl:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Specify the file to copy.</span>
file_to_copy <span class="token operator">=</span> <span class="token string">&#39;happy_pickle.jpg&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha √ºres f√°jlt szeretne l√©trehozni, amelybe m√°solni szeretne, sz√ºks√©ge van egy f√°jln√©vre. A k√∂vetkez≈ë k√≥d gondoskodik err≈ël:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create new file name with _copy before the extension.</span>
name_parts <span class="token operator">=</span> file_to_copy<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
new_file <span class="token operator">=</span> name_parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;_copy.&#39;</span> <span class="token operator">+</span> name_parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A m√°sol√°s ut√°ni els≈ë sor a megl√©v≈ë f√°jlnevet a pontn√°l kett√©v√°lasztja, √≠gy a <code>name_parts[0]</code> a <code>happy_pickle</code>-t, a <code>name_parts[1]</code> pedig a <code>png</code>-t tartalmazza. Ezut√°n a <code>new_file</code> v√°ltoz√≥ egy olyan √©rt√©ket kap, amely a n√©v els≈ë r√©sz√©b≈ël √°ll, amelyhez <code>_copy</code> √©s egy pont van csatolva, majd a n√©v utols√≥ r√©sz√©b≈ël. √çgy a sor v√©grehajt√°sa ut√°n a <code>new_file</code> v√°ltoz√≥ a <code>happy_pickle_copy.png</code> nevet tartalmazza.</p><p>A m√°sol√°shoz nyissa meg az eredeti f√°jlt <code>rb</code> (<strong>read, binary file</strong>) m√≥dban. Ezut√°n nyissa meg a f√°jlt, amelybe az eredeti f√°jlt m√°solni szeretn√©, <code>wb</code> (<strong>write, binary</strong>) m√≥dban. Az √≠r√°skor a Python l√©trehoz egy ilyen nev≈± f√°jlt, ha a f√°jl m√©g nem l√©tezik. Ha a f√°jl l√©tezik, a Python 0-ra √°ll√≠tott mutat√≥val nyitja meg, √≠gy b√°rmit √≠runk a f√°jlba, az a megl√©v≈ë f√°jl hely√©be l√©p (<em>nem pedig hozz√°ad√≥dik</em>).</p><p>A k√≥dban l√°that√≥, hogy az <code>original_file</code> v√°ltoz√≥ nevet haszn√°ltuk a m√°sol√°shoz, √©s a <code>copy_to</code> v√°ltoz√≥t annak a f√°jlnak a nevek√©nt, amelybe az adatokat m√°soljuk. A beh√∫z√°sok, mint mindig, kritikusak:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Open the original file as read-only binary. </span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_to_copy<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> original_file<span class="token punctuation">:</span>
    <span class="token comment"># Create or open file to copy into.</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>new_file<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> copy_to<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha a <code>.read()</code> parancsot haszn√°lja a teljes bin√°ris f√°jl beolvas√°s√°ra, fenn√°ll annak a vesz√©lye, hogy az olyan nagy lesz, hogy t√∫lterheli a sz√°m√≠t√≥g√©p RAM-j√°t, √©s a program √∂sszeomlik. Ennek elker√ºl√©se √©rdek√©ben ezt a programot √∫gy √≠rtuk meg, hogy egyszerre 4 KB (4096 b√°jt) adatot olvasson be. Ezt a 4 KB-os darabot egy chunk nev≈± v√°ltoz√≥ban t√°roljuk:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Grab a chunk of original file (4KB). </span>
chunk <span class="token operator">=</span> original_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A k√∂vetkez≈ë sor egy olyan ciklus, amely egyszerre csak egy darabot olvas be. A mutat√≥ automatikusan a k√∂vetkez≈ë darabra poz√≠cion√°l√≥dik a ciklus minden egyes lefut√°sakor. V√©g√ºl el√©ri a f√°jl v√©g√©t, ahol m√°r nem tud tov√°bb olvasni. Amikor ez megt√∂rt√©nik, a <code>chunk</code> √ºres lesz, vagyis a hossza <strong>0</strong>. Teh√°t ez a ciklus addig megy v√©gig a f√°jlon, am√≠g a v√©g√©re nem √©r:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Loop through until no more chunks. </span>
<span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A cikluson bel√ºl az els≈ë sor az utolj√°ra beolvasott darabot m√°solja a <code>copy_to</code> f√°jlba. A m√°sodik sor beolvassa a k√∂vetkez≈ë 4 KB-os darabot az eredeti f√°jlb√≥l. √âs √≠gy megy ez mindaddig, am√≠g az eredeti_f√°jlb√≥l minden √°t nem m√°sol√≥dik az √∫j f√°jlba:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>copy_to<span class="token punctuation">.</span>write<span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
<span class="token comment"># Make sure you read in the next chunk in this loop.</span>
chunk <span class="token operator">=</span> original_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Minden beh√∫z√°s megsz≈±nik e sor ut√°n. Amikor a ciklus befejez≈ëdik, a f√°jlok automatikusan bez√°r√≥dnak, √©s az utols√≥ sorban a <strong>Done!</strong> jelenik meg a k√∂vetkez≈ëk√©ppen:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Done!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A lenti √°bra a k√≥d futtat√°s√°nak eredm√©ny√©t mutatja. A termin√°l ablakt√°bl√°n egyszer≈±en a Done! jelenik meg. De mint l√°that√≥, a mapp√°ban most m√°r van egy <code>happy_pickle_copy.jpg</code> nev≈± f√°jl. Ezt a f√°jlt megnyitva bebizonyosodik, hogy ez az eredeti f√°jl m√°solata.</p><figure><img src="`+d+'" alt=" komplett k√≥d" tabindex="0" loading="lazy"><figcaption><code>binarycopy.py</code> komplett k√≥d</figcaption></figure><p><em><code>binarycopy.py</code> hozz√°adta a mapp√°hoz a <code>happy_pickle_copy.jpg</code> f√°jlt.</em></p><p>Let√∂lt√©s: <a href="/assets/images/python/11/happy_pickle.jpg">Happy Pickle k√©p</a></p>',153),m=[u];function g(v,z){return a(),e("div",null,m)}const y=n(k,[["render",g],["__file","lesson11.html.vue"]]);export{y as default};
